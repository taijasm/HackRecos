diff --git a/.ipynb_checkpoints/recos-checkpoint.ipynb b/.ipynb_checkpoints/recos-checkpoint.ipynb
index 368449e..032db68 100644
--- a/.ipynb_checkpoints/recos-checkpoint.ipynb
+++ b/.ipynb_checkpoints/recos-checkpoint.ipynb
@@ -9,12 +9,14 @@
      "name": "stderr",
      "output_type": "stream",
      "text": [
-      "//anaconda/envs/py3l/lib/python3.6/site-packages/matplotlib/__init__.py:855: MatplotlibDeprecationWarning: \n",
+      "/opt/conda/lib/python3.7/site-packages/matplotlib/__init__.py:855: MatplotlibDeprecationWarning: \n",
       "examples.directory is deprecated; in the future, examples will be found relative to the 'datapath' directory.\n",
       "  \"found relative to the 'datapath' directory.\".format(key))\n",
-      "//anaconda/envs/py3l/lib/python3.6/site-packages/matplotlib/__init__.py:846: MatplotlibDeprecationWarning: \n",
+      "/opt/conda/lib/python3.7/site-packages/matplotlib/__init__.py:846: MatplotlibDeprecationWarning: \n",
       "The text.latex.unicode rcparam was deprecated in Matplotlib 2.2 and will be removed in 3.1.\n",
-      "  \"2.2\", name=key, obj_type=\"rcparam\", addendum=addendum)\n"
+      "  \"2.2\", name=key, obj_type=\"rcparam\", addendum=addendum)\n",
+      "/opt/conda/lib/python3.7/site-packages/seaborn/apionly.py:9: UserWarning: As seaborn no longer sets a default style on import, the seaborn.apionly module is deprecated. It will be removed in a future version.\n",
+      "  warnings.warn(msg, UserWarning)\n"
      ]
     }
    ],
@@ -31,7 +33,7 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 21,
+   "execution_count": 3,
    "metadata": {},
    "outputs": [
     {
@@ -110,19 +112,19 @@
        "4       1       50     3.5  1112484580"
       ]
      },
-     "execution_count": 21,
+     "execution_count": 3,
      "metadata": {},
      "output_type": "execute_result"
     }
    ],
    "source": [
-    "df = pd.read_csv(\"data/ratings.csv.gz\", compression='gzip')\n",
+    "df = pd.read_csv(\"ratings.csv.gz\", compression='gzip')\n",
     "df.head()"
    ]
   },
   {
    "cell_type": "code",
-   "execution_count": 22,
+   "execution_count": 4,
    "metadata": {},
    "outputs": [
     {
@@ -195,7 +197,7 @@
        "4       1       50     3.5"
       ]
      },
-     "execution_count": 22,
+     "execution_count": 4,
      "metadata": {},
      "output_type": "execute_result"
     }
@@ -207,7 +209,7 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 23,
+   "execution_count": 5,
    "metadata": {},
    "outputs": [
     {
@@ -216,7 +218,7 @@
        "Index(['userId', 'movieId', 'rating'], dtype='object')"
       ]
      },
-     "execution_count": 23,
+     "execution_count": 5,
      "metadata": {},
      "output_type": "execute_result"
     }
@@ -227,7 +229,7 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 24,
+   "execution_count": 6,
    "metadata": {},
    "outputs": [],
    "source": [
@@ -236,7 +238,7 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 25,
+   "execution_count": 7,
    "metadata": {},
    "outputs": [],
    "source": [
@@ -246,7 +248,7 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 26,
+   "execution_count": 8,
    "metadata": {},
    "outputs": [
     {
@@ -255,7 +257,7 @@
        "50000"
       ]
      },
-     "execution_count": 26,
+     "execution_count": 8,
      "metadata": {},
      "output_type": "execute_result"
     }
@@ -267,16 +269,16 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 27,
+   "execution_count": 9,
    "metadata": {},
    "outputs": [
     {
      "data": {
       "text/plain": [
-       "(33243, 6594)"
+       "(33380, 6695)"
       ]
      },
-     "execution_count": 27,
+     "execution_count": 9,
      "metadata": {},
      "output_type": "execute_result"
     }
@@ -289,7 +291,7 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 28,
+   "execution_count": 10,
    "metadata": {},
    "outputs": [
     {
@@ -320,34 +322,34 @@
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
-       "      <th>2703571</th>\n",
-       "      <td>4539</td>\n",
-       "      <td>1492</td>\n",
-       "      <td>2.5</td>\n",
+       "      <th>16724527</th>\n",
+       "      <td>27904</td>\n",
+       "      <td>941</td>\n",
+       "      <td>3.0</td>\n",
        "    </tr>\n",
        "    <tr>\n",
-       "      <th>12887545</th>\n",
-       "      <td>21449</td>\n",
-       "      <td>1147</td>\n",
-       "      <td>4.0</td>\n",
+       "      <th>6211895</th>\n",
+       "      <td>10252</td>\n",
+       "      <td>395</td>\n",
+       "      <td>2.5</td>\n",
        "    </tr>\n",
        "    <tr>\n",
-       "      <th>16996832</th>\n",
-       "      <td>28335</td>\n",
-       "      <td>823</td>\n",
-       "      <td>3.0</td>\n",
+       "      <th>18570244</th>\n",
+       "      <td>31047</td>\n",
+       "      <td>6415</td>\n",
+       "      <td>4.0</td>\n",
        "    </tr>\n",
        "    <tr>\n",
-       "      <th>905459</th>\n",
-       "      <td>1545</td>\n",
-       "      <td>775</td>\n",
-       "      <td>4.5</td>\n",
+       "      <th>44365</th>\n",
+       "      <td>74</td>\n",
+       "      <td>3378</td>\n",
+       "      <td>2.0</td>\n",
        "    </tr>\n",
        "    <tr>\n",
-       "      <th>845713</th>\n",
-       "      <td>1439</td>\n",
-       "      <td>178</td>\n",
-       "      <td>3.0</td>\n",
+       "      <th>18513152</th>\n",
+       "      <td>30961</td>\n",
+       "      <td>788</td>\n",
+       "      <td>2.5</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
@@ -355,14 +357,14 @@
       ],
       "text/plain": [
        "          userId  movieId  rating\n",
-       "2703571     4539     1492     2.5\n",
-       "12887545   21449     1147     4.0\n",
-       "16996832   28335      823     3.0\n",
-       "905459      1545      775     4.5\n",
-       "845713      1439      178     3.0"
+       "16724527   27904      941     3.0\n",
+       "6211895    10252      395     2.5\n",
+       "18570244   31047     6415     4.0\n",
+       "44365         74     3378     2.0\n",
+       "18513152   30961      788     2.5"
       ]
      },
-     "execution_count": 28,
+     "execution_count": 10,
      "metadata": {},
      "output_type": "execute_result"
     }
@@ -373,7 +375,7 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 29,
+   "execution_count": 11,
    "metadata": {},
    "outputs": [],
    "source": [
@@ -383,7 +385,7 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 30,
+   "execution_count": 12,
    "metadata": {},
    "outputs": [],
    "source": [
@@ -393,18 +395,38 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 36,
+   "execution_count": 30,
    "metadata": {},
-   "outputs": [],
+   "outputs": [
+    {
+     "ename": "ValueError",
+     "evalue": "Layer model_2 expects 2 inputs, but it received 1 input tensors. Input received: [<tf.Tensor 'model_2_input:0' shape=(?, 1) dtype=float32>]",
+     "output_type": "error",
+     "traceback": [
+      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
+      "\u001b[0;31mValueError\u001b[0m                                Traceback (most recent call last)",
+      "\u001b[0;32m<ipython-input-30-c2fbddb45983>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[1;32m     10\u001b[0m \u001b[0mprod\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mkeras\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mlayers\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mDot\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0maxes\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mname\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m\"MatrixFactorization\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mmovie_vec\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0muser_vec\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     11\u001b[0m \u001b[0mmodel\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mkeras\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mmodels\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mSequential\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 12\u001b[0;31m \u001b[0mmodel\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0madd\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mkeras\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mModel\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0muser_input\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mmovie_input\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mprod\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     13\u001b[0m \u001b[0mmodel\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0madd\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mDropout\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;36m0.5\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     14\u001b[0m \u001b[0mmodel\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcompile\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'adam'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'mse'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
+      "\u001b[0;32m/opt/conda/lib/python3.7/site-packages/keras/engine/sequential.py\u001b[0m in \u001b[0;36madd\u001b[0;34m(self, layer)\u001b[0m\n\u001b[1;32m    163\u001b[0m                     \u001b[0;31m# and create the node connecting the current layer\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    164\u001b[0m                     \u001b[0;31m# to the input layer we just created.\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 165\u001b[0;31m                     \u001b[0mlayer\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mx\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    166\u001b[0m                     \u001b[0mset_inputs\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;32mTrue\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    167\u001b[0m             \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
+      "\u001b[0;32m/opt/conda/lib/python3.7/site-packages/keras/engine/base_layer.py\u001b[0m in \u001b[0;36m__call__\u001b[0;34m(self, inputs, **kwargs)\u001b[0m\n\u001b[1;32m    438\u001b[0m             \u001b[0;31m# Raise exceptions in case the input is not compatible\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    439\u001b[0m             \u001b[0;31m# with the input_spec set at build time.\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 440\u001b[0;31m             \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0massert_input_compatibility\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0minputs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    441\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    442\u001b[0m             \u001b[0;31m# Handle mask propagation.\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
+      "\u001b[0;32m/opt/conda/lib/python3.7/site-packages/keras/engine/base_layer.py\u001b[0m in \u001b[0;36massert_input_compatibility\u001b[0;34m(self, inputs)\u001b[0m\n\u001b[1;32m    297\u001b[0m                              \u001b[0;34m'but it received '\u001b[0m \u001b[0;34m+\u001b[0m \u001b[0mstr\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mlen\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0minputs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;34m+\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    298\u001b[0m                              \u001b[0;34m' input tensors. Input received: '\u001b[0m \u001b[0;34m+\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 299\u001b[0;31m                              str(inputs))\n\u001b[0m\u001b[1;32m    300\u001b[0m         \u001b[0;32mfor\u001b[0m \u001b[0minput_index\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m(\u001b[0m\u001b[0mx\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mspec\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32min\u001b[0m \u001b[0menumerate\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mzip\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0minputs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0minput_spec\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    301\u001b[0m             \u001b[0;32mif\u001b[0m \u001b[0mspec\u001b[0m \u001b[0;32mis\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
+      "\u001b[0;31mValueError\u001b[0m: Layer model_2 expects 2 inputs, but it received 1 input tensors. Input received: [<tf.Tensor 'model_2_input:0' shape=(?, 1) dtype=float32>]"
+     ]
+    }
+   ],
    "source": [
     "import keras\n",
+    "from keras.models import Sequential\n",
+    "from keras.layers import Activation, Dropout, Flatten, Dense\n",
+    "\n",
     "movie_input = keras.layers.Input(shape=[1],name='movieId')\n",
     "movie_embedding = keras.layers.Embedding(n_movies + 1, n_factors, name='movieEmbedding')(movie_input)\n",
-    "movie_vec = keras.layers.Flatten(name='movieFlatten')(movie_embedding)\n",
+    "movie_embedding_droput = keras.layers.Dropout(0.2)(movie_embedding) \n",
+    "movie_vec = keras.layers.Flatten(name='movieFlatten')(movie_embedding_droput)\n",
     "\n",
     "user_input = keras.layers.Input(shape=[1],name='userId')\n",
     "user_embedding = keras.layers.Embedding(n_users + 1, n_factors,name='userEmbedding')(user_input)\n",
-    "user_vec = keras.layers.Flatten(name='userFlatten')(user_embedding)\n",
+    "user_embedding_dropout = keras.layers.Dropout(0.2)(user_embedding)\n",
+    "user_vec = keras.layers.Flatten(name='userFlatten')(user_embedding_dropout)\n",
     "\n",
     "prod = keras.layers.Dot(axes=1, name=\"MatrixFactorization\")([movie_vec, user_vec] )\n",
     "model = keras.Model([user_input, movie_input], prod)\n",
@@ -413,7 +435,27 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 37,
+   "execution_count": 20,
+   "metadata": {},
+   "outputs": [
+    {
+     "data": {
+      "text/plain": [
+       "<tf.Tensor 'movieId:0' shape=(?, 1) dtype=float32>"
+      ]
+     },
+     "execution_count": 20,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "movie_input"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 21,
    "metadata": {},
    "outputs": [
     {
@@ -427,9 +469,9 @@
       "__________________________________________________________________________________________________\n",
       "userId (InputLayer)             (None, 1)            0                                            \n",
       "__________________________________________________________________________________________________\n",
-      "movieEmbedding (Embedding)      (None, 1, 3)         19785       movieId[0][0]                    \n",
+      "movieEmbedding (Embedding)      (None, 1, 3)         20088       movieId[0][0]                    \n",
       "__________________________________________________________________________________________________\n",
-      "userEmbedding (Embedding)       (None, 1, 3)         99732       userId[0][0]                     \n",
+      "userEmbedding (Embedding)       (None, 1, 3)         100143      userId[0][0]                     \n",
       "__________________________________________________________________________________________________\n",
       "movieFlatten (Flatten)          (None, 3)            0           movieEmbedding[0][0]             \n",
       "__________________________________________________________________________________________________\n",
@@ -438,8 +480,8 @@
       "MatrixFactorization (Dot)       (None, 1)            0           movieFlatten[0][0]               \n",
       "                                                                 userFlatten[0][0]                \n",
       "==================================================================================================\n",
-      "Total params: 119,517\n",
-      "Trainable params: 119,517\n",
+      "Total params: 120,231\n",
+      "Trainable params: 120,231\n",
       "Non-trainable params: 0\n",
       "__________________________________________________________________________________________________\n"
      ]
@@ -451,167 +493,27 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 45,
+   "execution_count": 24,
    "metadata": {},
-   "outputs": [
-    {
-     "data": {
-      "image/svg+xml": [
-       "<svg height=\"296pt\" viewBox=\"0.00 0.00 667.96 296.00\" width=\"668pt\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n",
-       "<g class=\"graph\" id=\"graph0\" transform=\"scale(1 1) rotate(0) translate(4 292)\">\n",
-       "<title>G</title>\n",
-       "<polygon fill=\"white\" points=\"-4,4 -4,-292 663.956,-292 663.956,4 -4,4\" stroke=\"none\"/>\n",
-       "<!-- 111995810536 -->\n",
-       "<g class=\"node\" id=\"node1\"><title>111995810536</title>\n",
-       "<polygon fill=\"none\" points=\"34.6172,-243.5 34.6172,-287.5 292.173,-287.5 292.173,-243.5 34.6172,-243.5\" stroke=\"black\"/>\n",
-       "<text font-family=\"Times,serif\" font-size=\"14.00\" text-anchor=\"middle\" x=\"100.736\" y=\"-261.3\">movieId: InputLayer</text>\n",
-       "<polyline fill=\"none\" points=\"166.855,-243.5 166.855,-287.5 \" stroke=\"black\"/>\n",
-       "<text font-family=\"Times,serif\" font-size=\"14.00\" text-anchor=\"middle\" x=\"194.69\" y=\"-272.3\">input:</text>\n",
-       "<polyline fill=\"none\" points=\"166.855,-265.5 222.524,-265.5 \" stroke=\"black\"/>\n",
-       "<text font-family=\"Times,serif\" font-size=\"14.00\" text-anchor=\"middle\" x=\"194.69\" y=\"-250.3\">output:</text>\n",
-       "<polyline fill=\"none\" points=\"222.524,-243.5 222.524,-287.5 \" stroke=\"black\"/>\n",
-       "<text font-family=\"Times,serif\" font-size=\"14.00\" text-anchor=\"middle\" x=\"257.349\" y=\"-272.3\">(None, 1)</text>\n",
-       "<polyline fill=\"none\" points=\"222.524,-265.5 292.173,-265.5 \" stroke=\"black\"/>\n",
-       "<text font-family=\"Times,serif\" font-size=\"14.00\" text-anchor=\"middle\" x=\"257.349\" y=\"-250.3\">(None, 1)</text>\n",
-       "</g>\n",
-       "<!-- 111995810704 -->\n",
-       "<g class=\"node\" id=\"node3\"><title>111995810704</title>\n",
-       "<polygon fill=\"none\" points=\"0,-162.5 0,-206.5 326.79,-206.5 326.79,-162.5 0,-162.5\" stroke=\"black\"/>\n",
-       "<text font-family=\"Times,serif\" font-size=\"14.00\" text-anchor=\"middle\" x=\"93.7363\" y=\"-180.3\">movieEmbedding: Embedding</text>\n",
-       "<polyline fill=\"none\" points=\"187.473,-162.5 187.473,-206.5 \" stroke=\"black\"/>\n",
-       "<text font-family=\"Times,serif\" font-size=\"14.00\" text-anchor=\"middle\" x=\"215.307\" y=\"-191.3\">input:</text>\n",
-       "<polyline fill=\"none\" points=\"187.473,-184.5 243.142,-184.5 \" stroke=\"black\"/>\n",
-       "<text font-family=\"Times,serif\" font-size=\"14.00\" text-anchor=\"middle\" x=\"215.307\" y=\"-169.3\">output:</text>\n",
-       "<polyline fill=\"none\" points=\"243.142,-162.5 243.142,-206.5 \" stroke=\"black\"/>\n",
-       "<text font-family=\"Times,serif\" font-size=\"14.00\" text-anchor=\"middle\" x=\"284.966\" y=\"-191.3\">(None, 1)</text>\n",
-       "<polyline fill=\"none\" points=\"243.142,-184.5 326.79,-184.5 \" stroke=\"black\"/>\n",
-       "<text font-family=\"Times,serif\" font-size=\"14.00\" text-anchor=\"middle\" x=\"284.966\" y=\"-169.3\">(None, 1, 3)</text>\n",
-       "</g>\n",
-       "<!-- 111995810536&#45;&gt;111995810704 -->\n",
-       "<g class=\"edge\" id=\"edge1\"><title>111995810536-&gt;111995810704</title>\n",
-       "<path d=\"M163.395,-243.329C163.395,-235.183 163.395,-225.699 163.395,-216.797\" fill=\"none\" stroke=\"black\"/>\n",
-       "<polygon fill=\"black\" points=\"166.895,-216.729 163.395,-206.729 159.895,-216.729 166.895,-216.729\" stroke=\"black\"/>\n",
-       "</g>\n",
-       "<!-- 111995810760 -->\n",
-       "<g class=\"node\" id=\"node2\"><title>111995810760</title>\n",
-       "<polygon fill=\"none\" points=\"379.452,-243.5 379.452,-287.5 625.338,-287.5 625.338,-243.5 379.452,-243.5\" stroke=\"black\"/>\n",
-       "<text font-family=\"Times,serif\" font-size=\"14.00\" text-anchor=\"middle\" x=\"439.736\" y=\"-261.3\">userId: InputLayer</text>\n",
-       "<polyline fill=\"none\" points=\"500.021,-243.5 500.021,-287.5 \" stroke=\"black\"/>\n",
-       "<text font-family=\"Times,serif\" font-size=\"14.00\" text-anchor=\"middle\" x=\"527.855\" y=\"-272.3\">input:</text>\n",
-       "<polyline fill=\"none\" points=\"500.021,-265.5 555.69,-265.5 \" stroke=\"black\"/>\n",
-       "<text font-family=\"Times,serif\" font-size=\"14.00\" text-anchor=\"middle\" x=\"527.855\" y=\"-250.3\">output:</text>\n",
-       "<polyline fill=\"none\" points=\"555.69,-243.5 555.69,-287.5 \" stroke=\"black\"/>\n",
-       "<text font-family=\"Times,serif\" font-size=\"14.00\" text-anchor=\"middle\" x=\"590.514\" y=\"-272.3\">(None, 1)</text>\n",
-       "<polyline fill=\"none\" points=\"555.69,-265.5 625.338,-265.5 \" stroke=\"black\"/>\n",
-       "<text font-family=\"Times,serif\" font-size=\"14.00\" text-anchor=\"middle\" x=\"590.514\" y=\"-250.3\">(None, 1)</text>\n",
-       "</g>\n",
-       "<!-- 111995810872 -->\n",
-       "<g class=\"node\" id=\"node4\"><title>111995810872</title>\n",
-       "<polygon fill=\"none\" points=\"344.834,-162.5 344.834,-206.5 659.956,-206.5 659.956,-162.5 344.834,-162.5\" stroke=\"black\"/>\n",
-       "<text font-family=\"Times,serif\" font-size=\"14.00\" text-anchor=\"middle\" x=\"432.736\" y=\"-180.3\">userEmbedding: Embedding</text>\n",
-       "<polyline fill=\"none\" points=\"520.638,-162.5 520.638,-206.5 \" stroke=\"black\"/>\n",
-       "<text font-family=\"Times,serif\" font-size=\"14.00\" text-anchor=\"middle\" x=\"548.473\" y=\"-191.3\">input:</text>\n",
-       "<polyline fill=\"none\" points=\"520.638,-184.5 576.307,-184.5 \" stroke=\"black\"/>\n",
-       "<text font-family=\"Times,serif\" font-size=\"14.00\" text-anchor=\"middle\" x=\"548.473\" y=\"-169.3\">output:</text>\n",
-       "<polyline fill=\"none\" points=\"576.307,-162.5 576.307,-206.5 \" stroke=\"black\"/>\n",
-       "<text font-family=\"Times,serif\" font-size=\"14.00\" text-anchor=\"middle\" x=\"618.131\" y=\"-191.3\">(None, 1)</text>\n",
-       "<polyline fill=\"none\" points=\"576.307,-184.5 659.956,-184.5 \" stroke=\"black\"/>\n",
-       "<text font-family=\"Times,serif\" font-size=\"14.00\" text-anchor=\"middle\" x=\"618.131\" y=\"-169.3\">(None, 1, 3)</text>\n",
-       "</g>\n",
-       "<!-- 111995810760&#45;&gt;111995810872 -->\n",
-       "<g class=\"edge\" id=\"edge2\"><title>111995810760-&gt;111995810872</title>\n",
-       "<path d=\"M502.395,-243.329C502.395,-235.183 502.395,-225.699 502.395,-216.797\" fill=\"none\" stroke=\"black\"/>\n",
-       "<polygon fill=\"black\" points=\"505.895,-216.729 502.395,-206.729 498.895,-216.729 505.895,-216.729\" stroke=\"black\"/>\n",
-       "</g>\n",
-       "<!-- 111995810816 -->\n",
-       "<g class=\"node\" id=\"node5\"><title>111995810816</title>\n",
-       "<polygon fill=\"none\" points=\"50.6621,-81.5 50.6621,-125.5 326.128,-125.5 326.128,-81.5 50.6621,-81.5\" stroke=\"black\"/>\n",
-       "<text font-family=\"Times,serif\" font-size=\"14.00\" text-anchor=\"middle\" x=\"118.736\" y=\"-99.3\">movieFlatten: Flatten</text>\n",
-       "<polyline fill=\"none\" points=\"186.811,-81.5 186.811,-125.5 \" stroke=\"black\"/>\n",
-       "<text font-family=\"Times,serif\" font-size=\"14.00\" text-anchor=\"middle\" x=\"214.645\" y=\"-110.3\">input:</text>\n",
-       "<polyline fill=\"none\" points=\"186.811,-103.5 242.479,-103.5 \" stroke=\"black\"/>\n",
-       "<text font-family=\"Times,serif\" font-size=\"14.00\" text-anchor=\"middle\" x=\"214.645\" y=\"-88.3\">output:</text>\n",
-       "<polyline fill=\"none\" points=\"242.479,-81.5 242.479,-125.5 \" stroke=\"black\"/>\n",
-       "<text font-family=\"Times,serif\" font-size=\"14.00\" text-anchor=\"middle\" x=\"284.304\" y=\"-110.3\">(None, 1, 3)</text>\n",
-       "<polyline fill=\"none\" points=\"242.479,-103.5 326.128,-103.5 \" stroke=\"black\"/>\n",
-       "<text font-family=\"Times,serif\" font-size=\"14.00\" text-anchor=\"middle\" x=\"284.304\" y=\"-88.3\">(None, 3)</text>\n",
-       "</g>\n",
-       "<!-- 111995810704&#45;&gt;111995810816 -->\n",
-       "<g class=\"edge\" id=\"edge3\"><title>111995810704-&gt;111995810816</title>\n",
-       "<path d=\"M170.095,-162.329C172.701,-154.094 175.739,-144.493 178.583,-135.507\" fill=\"none\" stroke=\"black\"/>\n",
-       "<polygon fill=\"black\" points=\"181.997,-136.319 181.677,-125.729 175.323,-134.207 181.997,-136.319\" stroke=\"black\"/>\n",
-       "</g>\n",
-       "<!-- 111995811040 -->\n",
-       "<g class=\"node\" id=\"node6\"><title>111995811040</title>\n",
-       "<polygon fill=\"none\" points=\"357.497,-81.5 357.497,-125.5 621.293,-125.5 621.293,-81.5 357.497,-81.5\" stroke=\"black\"/>\n",
-       "<text font-family=\"Times,serif\" font-size=\"14.00\" text-anchor=\"middle\" x=\"419.736\" y=\"-99.3\">userFlatten: Flatten</text>\n",
-       "<polyline fill=\"none\" points=\"481.976,-81.5 481.976,-125.5 \" stroke=\"black\"/>\n",
-       "<text font-family=\"Times,serif\" font-size=\"14.00\" text-anchor=\"middle\" x=\"509.811\" y=\"-110.3\">input:</text>\n",
-       "<polyline fill=\"none\" points=\"481.976,-103.5 537.645,-103.5 \" stroke=\"black\"/>\n",
-       "<text font-family=\"Times,serif\" font-size=\"14.00\" text-anchor=\"middle\" x=\"509.811\" y=\"-88.3\">output:</text>\n",
-       "<polyline fill=\"none\" points=\"537.645,-81.5 537.645,-125.5 \" stroke=\"black\"/>\n",
-       "<text font-family=\"Times,serif\" font-size=\"14.00\" text-anchor=\"middle\" x=\"579.469\" y=\"-110.3\">(None, 1, 3)</text>\n",
-       "<polyline fill=\"none\" points=\"537.645,-103.5 621.293,-103.5 \" stroke=\"black\"/>\n",
-       "<text font-family=\"Times,serif\" font-size=\"14.00\" text-anchor=\"middle\" x=\"579.469\" y=\"-88.3\">(None, 3)</text>\n",
-       "</g>\n",
-       "<!-- 111995810872&#45;&gt;111995811040 -->\n",
-       "<g class=\"edge\" id=\"edge4\"><title>111995810872-&gt;111995811040</title>\n",
-       "<path d=\"M498.911,-162.329C497.571,-154.183 496.01,-144.699 494.545,-135.797\" fill=\"none\" stroke=\"black\"/>\n",
-       "<polygon fill=\"black\" points=\"497.966,-135.028 492.888,-125.729 491.059,-136.165 497.966,-135.028\" stroke=\"black\"/>\n",
-       "</g>\n",
-       "<!-- 111995811152 -->\n",
-       "<g class=\"node\" id=\"node7\"><title>111995811152</title>\n",
-       "<polygon fill=\"none\" points=\"162.572,-0.5 162.572,-44.5 514.218,-44.5 514.218,-0.5 162.572,-0.5\" stroke=\"black\"/>\n",
-       "<text font-family=\"Times,serif\" font-size=\"14.00\" text-anchor=\"middle\" x=\"240.75\" y=\"-18.3\">MatrixFactorization: Dot</text>\n",
-       "<polyline fill=\"none\" points=\"318.928,-0.5 318.928,-44.5 \" stroke=\"black\"/>\n",
-       "<text font-family=\"Times,serif\" font-size=\"14.00\" text-anchor=\"middle\" x=\"346.762\" y=\"-29.3\">input:</text>\n",
-       "<polyline fill=\"none\" points=\"318.928,-22.5 374.597,-22.5 \" stroke=\"black\"/>\n",
-       "<text font-family=\"Times,serif\" font-size=\"14.00\" text-anchor=\"middle\" x=\"346.762\" y=\"-7.3\">output:</text>\n",
-       "<polyline fill=\"none\" points=\"374.597,-0.5 374.597,-44.5 \" stroke=\"black\"/>\n",
-       "<text font-family=\"Times,serif\" font-size=\"14.00\" text-anchor=\"middle\" x=\"444.407\" y=\"-29.3\">[(None, 3), (None, 3)]</text>\n",
-       "<polyline fill=\"none\" points=\"374.597,-22.5 514.218,-22.5 \" stroke=\"black\"/>\n",
-       "<text font-family=\"Times,serif\" font-size=\"14.00\" text-anchor=\"middle\" x=\"443.921\" y=\"-7.3\">(None, 1)</text>\n",
-       "</g>\n",
-       "<!-- 111995810816&#45;&gt;111995811152 -->\n",
-       "<g class=\"edge\" id=\"edge5\"><title>111995810816-&gt;111995811152</title>\n",
-       "<path d=\"M228.592,-81.3294C247.246,-71.5049 269.591,-59.7366 289.24,-49.3883\" fill=\"none\" stroke=\"black\"/>\n",
-       "<polygon fill=\"black\" points=\"291.13,-52.3486 298.347,-44.5919 287.868,-46.1551 291.13,-52.3486\" stroke=\"black\"/>\n",
-       "</g>\n",
-       "<!-- 111995811040&#45;&gt;111995811152 -->\n",
-       "<g class=\"edge\" id=\"edge6\"><title>111995811040-&gt;111995811152</title>\n",
-       "<path d=\"M448.93,-81.3294C430.066,-71.4605 407.454,-59.63 387.609,-49.2479\" fill=\"none\" stroke=\"black\"/>\n",
-       "<polygon fill=\"black\" points=\"389.193,-46.1264 378.71,-44.5919 385.948,-52.3288 389.193,-46.1264\" stroke=\"black\"/>\n",
-       "</g>\n",
-       "</g>\n",
-       "</svg>"
-      ],
-      "text/plain": [
-       "<IPython.core.display.SVG object>"
-      ]
-     },
-     "execution_count": 45,
-     "metadata": {},
-     "output_type": "execute_result"
-    }
-   ],
+   "outputs": [],
    "source": [
     "from keras.utils.vis_utils import model_to_dot\n",
     "from IPython.display import SVG\n",
-    "SVG(model_to_dot(model,  show_shapes=True, show_layer_names=True, rankdir='HB').create(prog='dot', format='svg'))"
+    "# SVG(model_to_dot(model,  show_shapes=True, show_layer_names=True, rankdir='HB').create(prog='dot', format='svg'))"
    ]
   },
   {
    "cell_type": "code",
-   "execution_count": 39,
+   "execution_count": 25,
    "metadata": {},
    "outputs": [
     {
      "data": {
       "text/plain": [
-       "array([ 4539, 21449, 28335, ..., 26948,  1766, 31200], dtype=int32)"
+       "array([10252,    74, 28423, ..., 18312,  2874,  1637], dtype=int32)"
       ]
      },
-     "execution_count": 39,
+     "execution_count": 25,
      "metadata": {},
      "output_type": "execute_result"
     }
@@ -622,213 +524,216 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 40,
+   "execution_count": 26,
    "metadata": {},
    "outputs": [
     {
      "name": "stdout",
      "output_type": "stream",
      "text": [
+      "WARNING:tensorflow:From /opt/conda/lib/python3.7/site-packages/tensorflow/python/ops/math_ops.py:3066: to_int32 (from tensorflow.python.ops.math_ops) is deprecated and will be removed in a future version.\n",
+      "Instructions for updating:\n",
+      "Use tf.cast instead.\n",
       "Epoch 1/100\n",
-      "40102/40102 [==============================] - 10s 240us/step - loss: 13.5493\n",
+      "39912/39912 [==============================] - 21s 519us/step - loss: 13.5005\n",
       "Epoch 2/100\n",
-      "40102/40102 [==============================] - 9s 227us/step - loss: 13.5154\n",
+      "39912/39912 [==============================] - 5s 134us/step - loss: 13.4678\n",
       "Epoch 3/100\n",
-      "40102/40102 [==============================] - 9s 237us/step - loss: 13.3653\n",
+      "39912/39912 [==============================] - 5s 130us/step - loss: 13.3227\n",
       "Epoch 4/100\n",
-      "40102/40102 [==============================] - 10s 250us/step - loss: 13.0370\n",
+      "39912/39912 [==============================] - 5s 128us/step - loss: 13.0030\n",
       "Epoch 5/100\n",
-      "40102/40102 [==============================] - 10s 243us/step - loss: 12.5399\n",
+      "39912/39912 [==============================] - 5s 122us/step - loss: 12.5169\n",
       "Epoch 6/100\n",
-      "40102/40102 [==============================] - 10s 246us/step - loss: 11.9038\n",
+      "39912/39912 [==============================] - 5s 128us/step - loss: 11.8922\n",
       "Epoch 7/100\n",
-      "40102/40102 [==============================] - 12s 289us/step - loss: 11.1570\n",
+      "39912/39912 [==============================] - 5s 129us/step - loss: 11.1582\n",
       "Epoch 8/100\n",
-      "40102/40102 [==============================] - 10s 240us/step - loss: 10.3298\n",
+      "39912/39912 [==============================] - 5s 129us/step - loss: 10.3437\n",
       "Epoch 9/100\n",
-      "40102/40102 [==============================] - 9s 225us/step - loss: 9.4517\n",
+      "39912/39912 [==============================] - 5s 128us/step - loss: 9.4778\n",
       "Epoch 10/100\n",
-      "40102/40102 [==============================] - 9s 223us/step - loss: 8.5550\n",
+      "39912/39912 [==============================] - 5s 130us/step - loss: 8.5907\n",
       "Epoch 11/100\n",
-      "40102/40102 [==============================] - 11s 264us/step - loss: 7.6719\n",
+      "39912/39912 [==============================] - 5s 130us/step - loss: 7.7138\n",
       "Epoch 12/100\n",
-      "40102/40102 [==============================] - 11s 264us/step - loss: 6.8300\n",
+      "39912/39912 [==============================] - 5s 123us/step - loss: 6.8738\n",
       "Epoch 13/100\n",
-      "40102/40102 [==============================] - 10s 245us/step - loss: 6.0531\n",
+      "39912/39912 [==============================] - 5s 130us/step - loss: 6.0947\n",
       "Epoch 14/100\n",
-      "40102/40102 [==============================] - 11s 264us/step - loss: 5.3547\n",
+      "39912/39912 [==============================] - 5s 136us/step - loss: 5.3912\n",
       "Epoch 15/100\n",
-      "40102/40102 [==============================] - 11s 263us/step - loss: 4.7401\n",
+      "39912/39912 [==============================] - 5s 136us/step - loss: 4.7685\n",
       "Epoch 16/100\n",
-      "40102/40102 [==============================] - 11s 266us/step - loss: 4.2061\n",
+      "39912/39912 [==============================] - 5s 126us/step - loss: 4.2256\n",
       "Epoch 17/100\n",
-      "40102/40102 [==============================] - 11s 264us/step - loss: 3.7450\n",
+      "39912/39912 [==============================] - 7s 166us/step - loss: 3.7557\n",
       "Epoch 18/100\n",
-      "40102/40102 [==============================] - 10s 254us/step - loss: 3.3484\n",
+      "39912/39912 [==============================] - 5s 118us/step - loss: 3.3505\n",
       "Epoch 19/100\n",
-      "40102/40102 [==============================] - 11s 264us/step - loss: 3.0063\n",
+      "39912/39912 [==============================] - 5s 117us/step - loss: 3.0006\n",
       "Epoch 20/100\n",
-      "40102/40102 [==============================] - 11s 268us/step - loss: 2.7107\n",
+      "39912/39912 [==============================] - 5s 117us/step - loss: 2.6997\n",
       "Epoch 21/100\n",
-      "40102/40102 [==============================] - 11s 268us/step - loss: 2.4542\n",
+      "39912/39912 [==============================] - 5s 115us/step - loss: 2.4388\n",
       "Epoch 22/100\n",
-      "40102/40102 [==============================] - 11s 283us/step - loss: 2.2311\n",
+      "39912/39912 [==============================] - 5s 116us/step - loss: 2.2122\n",
       "Epoch 23/100\n",
-      "40102/40102 [==============================] - 12s 288us/step - loss: 2.0362\n",
+      "39912/39912 [==============================] - 5s 115us/step - loss: 2.0140\n",
       "Epoch 24/100\n",
-      "40102/40102 [==============================] - 10s 253us/step - loss: 1.8644\n",
+      "39912/39912 [==============================] - 5s 115us/step - loss: 1.8411\n",
       "Epoch 25/100\n",
-      "40102/40102 [==============================] - 11s 275us/step - loss: 1.7142\n",
+      "39912/39912 [==============================] - 5s 119us/step - loss: 1.6885\n",
       "Epoch 26/100\n",
-      "40102/40102 [==============================] - 15s 385us/step - loss: 1.5807\n",
+      "39912/39912 [==============================] - 5s 118us/step - loss: 1.5539\n",
       "Epoch 27/100\n",
-      "40102/40102 [==============================] - 13s 314us/step - loss: 1.4629\n",
+      "39912/39912 [==============================] - 5s 117us/step - loss: 1.4349\n",
       "Epoch 28/100\n",
-      "40102/40102 [==============================] - 12s 301us/step - loss: 1.3578\n",
+      "39912/39912 [==============================] - 5s 119us/step - loss: 1.3294\n",
       "Epoch 29/100\n",
-      "40102/40102 [==============================] - 12s 302us/step - loss: 1.2640\n",
+      "39912/39912 [==============================] - 5s 123us/step - loss: 1.2353\n",
       "Epoch 30/100\n",
-      "40102/40102 [==============================] - 11s 283us/step - loss: 1.1801\n",
+      "39912/39912 [==============================] - 7s 164us/step - loss: 1.1511\n",
       "Epoch 31/100\n",
-      "40102/40102 [==============================] - 11s 281us/step - loss: 1.1048\n",
+      "39912/39912 [==============================] - 5s 120us/step - loss: 1.0759\n",
       "Epoch 32/100\n",
-      "40102/40102 [==============================] - 11s 273us/step - loss: 1.0371\n",
+      "39912/39912 [==============================] - 5s 126us/step - loss: 1.0082\n",
       "Epoch 33/100\n",
-      "40102/40102 [==============================] - 11s 278us/step - loss: 0.9767\n",
+      "39912/39912 [==============================] - 5s 119us/step - loss: 0.9471\n",
       "Epoch 34/100\n",
-      "40102/40102 [==============================] - 11s 273us/step - loss: 0.9211\n",
+      "39912/39912 [==============================] - 5s 116us/step - loss: 0.8921\n",
       "Epoch 35/100\n",
-      "40102/40102 [==============================] - 12s 288us/step - loss: 0.8711\n",
+      "39912/39912 [==============================] - 5s 121us/step - loss: 0.8423\n",
       "Epoch 36/100\n",
-      "40102/40102 [==============================] - 11s 266us/step - loss: 0.8256\n",
+      "39912/39912 [==============================] - 5s 119us/step - loss: 0.7969\n",
       "Epoch 37/100\n",
-      "40102/40102 [==============================] - 11s 273us/step - loss: 0.7842\n",
+      "39912/39912 [==============================] - 7s 173us/step - loss: 0.7560\n",
       "Epoch 38/100\n",
-      "40102/40102 [==============================] - 11s 284us/step - loss: 0.7463\n",
+      "39912/39912 [==============================] - 5s 116us/step - loss: 0.7182\n",
       "Epoch 39/100\n",
-      "40102/40102 [==============================] - 14s 358us/step - loss: 0.7114\n",
+      "39912/39912 [==============================] - 5s 117us/step - loss: 0.6840\n",
       "Epoch 40/100\n",
-      "40102/40102 [==============================] - 17s 436us/step - loss: 0.6796\n",
+      "39912/39912 [==============================] - 5s 118us/step - loss: 0.6526\n",
       "Epoch 41/100\n",
-      "40102/40102 [==============================] - 18s 447us/step - loss: 0.6502\n",
+      "39912/39912 [==============================] - 5s 120us/step - loss: 0.6234\n",
       "Epoch 42/100\n",
-      "40102/40102 [==============================] - 16s 396us/step - loss: 0.6230\n",
+      "39912/39912 [==============================] - 5s 124us/step - loss: 0.5964\n",
       "Epoch 43/100\n",
-      "40102/40102 [==============================] - 17s 419us/step - loss: 0.5979\n",
+      "39912/39912 [==============================] - 5s 119us/step - loss: 0.5718\n",
       "Epoch 44/100\n",
-      "40102/40102 [==============================] - 15s 381us/step - loss: 0.5746\n",
+      "39912/39912 [==============================] - 5s 116us/step - loss: 0.5485\n",
       "Epoch 45/100\n",
-      "40102/40102 [==============================] - 16s 392us/step - loss: 0.5530\n",
+      "39912/39912 [==============================] - 5s 120us/step - loss: 0.5273\n",
       "Epoch 46/100\n",
-      "40102/40102 [==============================] - 17s 418us/step - loss: 0.5326\n",
+      "39912/39912 [==============================] - 5s 122us/step - loss: 0.5070\n",
       "Epoch 47/100\n",
-      "40102/40102 [==============================] - 16s 396us/step - loss: 0.5135\n",
+      "39912/39912 [==============================] - 5s 123us/step - loss: 0.4880\n",
       "Epoch 48/100\n",
-      "40102/40102 [==============================] - 14s 358us/step - loss: 0.4954\n",
+      "39912/39912 [==============================] - 5s 123us/step - loss: 0.4704\n",
       "Epoch 49/100\n",
-      "40102/40102 [==============================] - 14s 356us/step - loss: 0.4783\n",
+      "39912/39912 [==============================] - 5s 122us/step - loss: 0.4535\n",
       "Epoch 50/100\n",
-      "40102/40102 [==============================] - 18s 439us/step - loss: 0.4618\n",
+      "39912/39912 [==============================] - 5s 122us/step - loss: 0.4373\n",
       "Epoch 51/100\n",
-      "40102/40102 [==============================] - 12s 309us/step - loss: 0.4460\n",
+      "39912/39912 [==============================] - 5s 121us/step - loss: 0.4220\n",
       "Epoch 52/100\n",
-      "40102/40102 [==============================] - 11s 271us/step - loss: 0.4308\n",
+      "39912/39912 [==============================] - 5s 123us/step - loss: 0.4073\n",
       "Epoch 53/100\n",
-      "40102/40102 [==============================] - 12s 310us/step - loss: 0.4163\n",
+      "39912/39912 [==============================] - 10s 243us/step - loss: 0.3931\n",
       "Epoch 54/100\n",
-      "40102/40102 [==============================] - 13s 319us/step - loss: 0.4022\n",
+      "39912/39912 [==============================] - 9s 237us/step - loss: 0.3795\n",
       "Epoch 55/100\n",
-      "40102/40102 [==============================] - 13s 324us/step - loss: 0.3885\n",
+      "39912/39912 [==============================] - 9s 229us/step - loss: 0.3662\n",
       "Epoch 56/100\n",
-      "40102/40102 [==============================] - 14s 342us/step - loss: 0.3752\n",
+      "39912/39912 [==============================] - 8s 199us/step - loss: 0.3536\n",
       "Epoch 57/100\n",
-      "40102/40102 [==============================] - 15s 379us/step - loss: 0.3625\n",
+      "39912/39912 [==============================] - 5s 120us/step - loss: 0.3415\n",
       "Epoch 58/100\n",
-      "40102/40102 [==============================] - 15s 377us/step - loss: 0.3501\n",
+      "39912/39912 [==============================] - 5s 115us/step - loss: 0.3296\n",
       "Epoch 59/100\n",
-      "40102/40102 [==============================] - 15s 368us/step - loss: 0.3381\n",
+      "39912/39912 [==============================] - 5s 122us/step - loss: 0.3181\n",
       "Epoch 60/100\n",
-      "40102/40102 [==============================] - 15s 371us/step - loss: 0.3264\n",
+      "39912/39912 [==============================] - 5s 123us/step - loss: 0.3071\n",
       "Epoch 61/100\n",
-      "40102/40102 [==============================] - 15s 366us/step - loss: 0.3152\n",
+      "39912/39912 [==============================] - 5s 120us/step - loss: 0.2964\n",
       "Epoch 62/100\n",
-      "40102/40102 [==============================] - 14s 355us/step - loss: 0.3044\n",
+      "39912/39912 [==============================] - 5s 120us/step - loss: 0.2862\n",
       "Epoch 63/100\n",
-      "40102/40102 [==============================] - 13s 321us/step - loss: 0.2937\n",
+      "39912/39912 [==============================] - 5s 123us/step - loss: 0.2759\n",
       "Epoch 64/100\n",
-      "40102/40102 [==============================] - 12s 308us/step - loss: 0.2833\n",
+      "39912/39912 [==============================] - 5s 117us/step - loss: 0.2662\n",
       "Epoch 65/100\n",
-      "40102/40102 [==============================] - 13s 312us/step - loss: 0.2735\n",
+      "39912/39912 [==============================] - 5s 119us/step - loss: 0.2569\n",
       "Epoch 66/100\n",
-      "40102/40102 [==============================] - 12s 305us/step - loss: 0.2639\n",
+      "39912/39912 [==============================] - 5s 120us/step - loss: 0.2476\n",
       "Epoch 67/100\n",
-      "40102/40102 [==============================] - 16s 409us/step - loss: 0.2545\n",
+      "39912/39912 [==============================] - 5s 119us/step - loss: 0.2385\n",
       "Epoch 68/100\n",
-      "40102/40102 [==============================] - 11s 268us/step - loss: 0.2454\n",
+      "39912/39912 [==============================] - 5s 118us/step - loss: 0.2300\n",
       "Epoch 69/100\n",
-      "40102/40102 [==============================] - 9s 233us/step - loss: 0.2367\n",
+      "39912/39912 [==============================] - 5s 117us/step - loss: 0.2217\n",
       "Epoch 70/100\n",
-      "40102/40102 [==============================] - 10s 254us/step - loss: 0.2283\n",
+      "39912/39912 [==============================] - 5s 117us/step - loss: 0.2136\n",
       "Epoch 71/100\n",
-      "40102/40102 [==============================] - 10s 258us/step - loss: 0.2199\n",
+      "39912/39912 [==============================] - 5s 118us/step - loss: 0.2057\n",
       "Epoch 72/100\n",
-      "40102/40102 [==============================] - 10s 254us/step - loss: 0.2120\n",
+      "39912/39912 [==============================] - 5s 115us/step - loss: 0.1982\n",
       "Epoch 73/100\n",
-      "40102/40102 [==============================] - 10s 239us/step - loss: 0.2043\n",
+      "39912/39912 [==============================] - 5s 117us/step - loss: 0.1908\n",
       "Epoch 74/100\n",
-      "40102/40102 [==============================] - 11s 277us/step - loss: 0.1969\n",
+      "39912/39912 [==============================] - 5s 119us/step - loss: 0.1836\n",
       "Epoch 75/100\n",
-      "40102/40102 [==============================] - 10s 250us/step - loss: 0.1897\n",
+      "39912/39912 [==============================] - 5s 116us/step - loss: 0.1767\n",
       "Epoch 76/100\n",
-      "40102/40102 [==============================] - 11s 283us/step - loss: 0.1827\n",
+      "39912/39912 [==============================] - 5s 123us/step - loss: 0.1702\n",
       "Epoch 77/100\n",
-      "40102/40102 [==============================] - 10s 261us/step - loss: 0.1760\n",
+      "39912/39912 [==============================] - 5s 118us/step - loss: 0.1638\n",
       "Epoch 78/100\n",
-      "40102/40102 [==============================] - 9s 234us/step - loss: 0.1697\n",
+      "39912/39912 [==============================] - 5s 121us/step - loss: 0.1576\n",
       "Epoch 79/100\n",
-      "40102/40102 [==============================] - 10s 259us/step - loss: 0.1634\n",
+      "39912/39912 [==============================] - 5s 117us/step - loss: 0.1516\n",
       "Epoch 80/100\n",
-      "40102/40102 [==============================] - 10s 245us/step - loss: 0.1573\n",
+      "39912/39912 [==============================] - 5s 119us/step - loss: 0.1459\n",
       "Epoch 81/100\n",
-      "40102/40102 [==============================] - 10s 248us/step - loss: 0.1515\n",
+      "39912/39912 [==============================] - 5s 116us/step - loss: 0.1405\n",
       "Epoch 82/100\n",
-      "40102/40102 [==============================] - 11s 263us/step - loss: 0.1459\n",
+      "39912/39912 [==============================] - 5s 116us/step - loss: 0.1350\n",
       "Epoch 83/100\n",
-      "40102/40102 [==============================] - 12s 305us/step - loss: 0.1405\n",
+      "39912/39912 [==============================] - 5s 119us/step - loss: 0.1299\n",
       "Epoch 84/100\n",
-      "40102/40102 [==============================] - 12s 297us/step - loss: 0.1356\n",
+      "39912/39912 [==============================] - 5s 119us/step - loss: 0.1249\n",
       "Epoch 85/100\n",
-      "40102/40102 [==============================] - 11s 281us/step - loss: 0.1304\n",
+      "39912/39912 [==============================] - 5s 116us/step - loss: 0.1201\n",
       "Epoch 86/100\n",
-      "40102/40102 [==============================] - 10s 244us/step - loss: 0.1258\n",
+      "39912/39912 [==============================] - 5s 116us/step - loss: 0.1154\n",
       "Epoch 87/100\n",
-      "40102/40102 [==============================] - 10s 241us/step - loss: 0.1211\n",
+      "39912/39912 [==============================] - 5s 118us/step - loss: 0.1110\n",
       "Epoch 88/100\n",
-      "40102/40102 [==============================] - 10s 255us/step - loss: 0.1168\n",
+      "39912/39912 [==============================] - 5s 121us/step - loss: 0.1068\n",
       "Epoch 89/100\n",
-      "40102/40102 [==============================] - 11s 271us/step - loss: 0.1125\n",
+      "39912/39912 [==============================] - 5s 125us/step - loss: 0.1026\n",
       "Epoch 90/100\n",
-      "40102/40102 [==============================] - 9s 235us/step - loss: 0.1085\n",
+      "39912/39912 [==============================] - 5s 117us/step - loss: 0.0986\n",
       "Epoch 91/100\n",
-      "40102/40102 [==============================] - 10s 243us/step - loss: 0.1048\n",
+      "39912/39912 [==============================] - 5s 118us/step - loss: 0.0949\n",
       "Epoch 92/100\n",
-      "40102/40102 [==============================] - 10s 257us/step - loss: 0.1011\n",
+      "39912/39912 [==============================] - 5s 116us/step - loss: 0.0914\n",
       "Epoch 93/100\n",
-      "40102/40102 [==============================] - 11s 263us/step - loss: 0.0975\n",
+      "39912/39912 [==============================] - 5s 117us/step - loss: 0.0878\n",
       "Epoch 94/100\n",
-      "40102/40102 [==============================] - 10s 255us/step - loss: 0.0942\n",
+      "39912/39912 [==============================] - 5s 115us/step - loss: 0.0846\n",
       "Epoch 95/100\n",
-      "40102/40102 [==============================] - 11s 268us/step - loss: 0.0908\n",
+      "39912/39912 [==============================] - 5s 116us/step - loss: 0.0813\n",
       "Epoch 96/100\n",
-      "40102/40102 [==============================] - 10s 261us/step - loss: 0.0878\n",
+      "39912/39912 [==============================] - 5s 115us/step - loss: 0.0783\n",
       "Epoch 97/100\n",
-      "40102/40102 [==============================] - 11s 267us/step - loss: 0.0847\n",
+      "39912/39912 [==============================] - 5s 117us/step - loss: 0.0754\n",
       "Epoch 98/100\n",
-      "40102/40102 [==============================] - 9s 227us/step - loss: 0.0819\n",
+      "39912/39912 [==============================] - 5s 114us/step - loss: 0.0727\n",
       "Epoch 99/100\n",
-      "40102/40102 [==============================] - 10s 260us/step - loss: 0.0790\n",
+      "39912/39912 [==============================] - 5s 116us/step - loss: 0.0699\n",
       "Epoch 100/100\n",
-      "40102/40102 [==============================] - 11s 268us/step - loss: 0.0765\n"
+      "39912/39912 [==============================] - 5s 117us/step - loss: 0.0674\n"
      ]
     }
    ],
@@ -838,27 +743,29 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 41,
+   "execution_count": 27,
    "metadata": {},
    "outputs": [
     {
      "data": {
       "text/plain": [
-       "[<matplotlib.lines.Line2D at 0x1a44fef9b0>]"
+       "[<matplotlib.lines.Line2D at 0x7fb0b46f2710>]"
       ]
      },
-     "execution_count": 41,
+     "execution_count": 27,
      "metadata": {},
      "output_type": "execute_result"
     },
     {
      "data": {
-      "image/png": "\n",
+      "image/png": "\n",
       "text/plain": [
        "<Figure size 432x288 with 1 Axes>"
       ]
      },
-     "metadata": {},
+     "metadata": {
+      "needs_background": "light"
+     },
      "output_type": "display_data"
     }
    ],
@@ -868,16 +775,16 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 44,
+   "execution_count": 28,
    "metadata": {},
    "outputs": [
     {
      "data": {
       "text/plain": [
-       "4.2566359948675405"
+       "4.271703607138486"
       ]
      },
-     "execution_count": 44,
+     "execution_count": 28,
      "metadata": {},
      "output_type": "execute_result"
     }
@@ -912,7 +819,7 @@
    "name": "python",
    "nbconvert_exporter": "python",
    "pygments_lexer": "ipython3",
-   "version": "3.6.8"
+   "version": "3.7.3"
   }
  },
  "nbformat": 4,
diff --git a/recos.ipynb b/recos.ipynb
index 368449e..3977c5f 100644
--- a/recos.ipynb
+++ b/recos.ipynb
@@ -9,12 +9,14 @@
      "name": "stderr",
      "output_type": "stream",
      "text": [
-      "//anaconda/envs/py3l/lib/python3.6/site-packages/matplotlib/__init__.py:855: MatplotlibDeprecationWarning: \n",
+      "/opt/conda/lib/python3.7/site-packages/matplotlib/__init__.py:855: MatplotlibDeprecationWarning: \n",
       "examples.directory is deprecated; in the future, examples will be found relative to the 'datapath' directory.\n",
       "  \"found relative to the 'datapath' directory.\".format(key))\n",
-      "//anaconda/envs/py3l/lib/python3.6/site-packages/matplotlib/__init__.py:846: MatplotlibDeprecationWarning: \n",
+      "/opt/conda/lib/python3.7/site-packages/matplotlib/__init__.py:846: MatplotlibDeprecationWarning: \n",
       "The text.latex.unicode rcparam was deprecated in Matplotlib 2.2 and will be removed in 3.1.\n",
-      "  \"2.2\", name=key, obj_type=\"rcparam\", addendum=addendum)\n"
+      "  \"2.2\", name=key, obj_type=\"rcparam\", addendum=addendum)\n",
+      "/opt/conda/lib/python3.7/site-packages/seaborn/apionly.py:9: UserWarning: As seaborn no longer sets a default style on import, the seaborn.apionly module is deprecated. It will be removed in a future version.\n",
+      "  warnings.warn(msg, UserWarning)\n"
      ]
     }
    ],
@@ -31,7 +33,27 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 21,
+   "execution_count": 43,
+   "metadata": {},
+   "outputs": [
+    {
+     "name": "stdout",
+     "output_type": "stream",
+     "text": [
+      "W&B Run: https://app.wandb.ai/univai-ss2019/HackRecos/runs/i0vvz7x2\n",
+      "Call `%%wandb` in the cell containing your training loop to display live results.\n"
+     ]
+    }
+   ],
+   "source": [
+    "import wandb\n",
+    "from wandb.keras import WandbCallback\n",
+    "run = wandb.init()"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 3,
    "metadata": {},
    "outputs": [
     {
@@ -110,19 +132,19 @@
        "4       1       50     3.5  1112484580"
       ]
      },
-     "execution_count": 21,
+     "execution_count": 3,
      "metadata": {},
      "output_type": "execute_result"
     }
    ],
    "source": [
-    "df = pd.read_csv(\"data/ratings.csv.gz\", compression='gzip')\n",
+    "df = pd.read_csv(\"ratings.csv.gz\", compression='gzip')\n",
     "df.head()"
    ]
   },
   {
    "cell_type": "code",
-   "execution_count": 22,
+   "execution_count": 4,
    "metadata": {},
    "outputs": [
     {
@@ -195,7 +217,7 @@
        "4       1       50     3.5"
       ]
      },
-     "execution_count": 22,
+     "execution_count": 4,
      "metadata": {},
      "output_type": "execute_result"
     }
@@ -207,7 +229,7 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 23,
+   "execution_count": 5,
    "metadata": {},
    "outputs": [
     {
@@ -216,7 +238,7 @@
        "Index(['userId', 'movieId', 'rating'], dtype='object')"
       ]
      },
-     "execution_count": 23,
+     "execution_count": 5,
      "metadata": {},
      "output_type": "execute_result"
     }
@@ -227,16 +249,16 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 24,
+   "execution_count": 47,
    "metadata": {},
    "outputs": [],
    "source": [
-    "df2 = df.sample(50000)"
+    "df2 = df.sample(500000)"
    ]
   },
   {
    "cell_type": "code",
-   "execution_count": 25,
+   "execution_count": 48,
    "metadata": {},
    "outputs": [],
    "source": [
@@ -246,16 +268,16 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 26,
+   "execution_count": 49,
    "metadata": {},
    "outputs": [
     {
      "data": {
       "text/plain": [
-       "50000"
+       "500000"
       ]
      },
-     "execution_count": 26,
+     "execution_count": 49,
      "metadata": {},
      "output_type": "execute_result"
     }
@@ -267,16 +289,16 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 27,
+   "execution_count": 50,
    "metadata": {},
    "outputs": [
     {
      "data": {
       "text/plain": [
-       "(33243, 6594)"
+       "(107014, 13147)"
       ]
      },
-     "execution_count": 27,
+     "execution_count": 50,
      "metadata": {},
      "output_type": "execute_result"
     }
@@ -289,7 +311,7 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 28,
+   "execution_count": 10,
    "metadata": {},
    "outputs": [
     {
@@ -320,34 +342,34 @@
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
-       "      <th>2703571</th>\n",
-       "      <td>4539</td>\n",
-       "      <td>1492</td>\n",
-       "      <td>2.5</td>\n",
+       "      <th>16724527</th>\n",
+       "      <td>27904</td>\n",
+       "      <td>941</td>\n",
+       "      <td>3.0</td>\n",
        "    </tr>\n",
        "    <tr>\n",
-       "      <th>12887545</th>\n",
-       "      <td>21449</td>\n",
-       "      <td>1147</td>\n",
-       "      <td>4.0</td>\n",
+       "      <th>6211895</th>\n",
+       "      <td>10252</td>\n",
+       "      <td>395</td>\n",
+       "      <td>2.5</td>\n",
        "    </tr>\n",
        "    <tr>\n",
-       "      <th>16996832</th>\n",
-       "      <td>28335</td>\n",
-       "      <td>823</td>\n",
-       "      <td>3.0</td>\n",
+       "      <th>18570244</th>\n",
+       "      <td>31047</td>\n",
+       "      <td>6415</td>\n",
+       "      <td>4.0</td>\n",
        "    </tr>\n",
        "    <tr>\n",
-       "      <th>905459</th>\n",
-       "      <td>1545</td>\n",
-       "      <td>775</td>\n",
-       "      <td>4.5</td>\n",
+       "      <th>44365</th>\n",
+       "      <td>74</td>\n",
+       "      <td>3378</td>\n",
+       "      <td>2.0</td>\n",
        "    </tr>\n",
        "    <tr>\n",
-       "      <th>845713</th>\n",
-       "      <td>1439</td>\n",
-       "      <td>178</td>\n",
-       "      <td>3.0</td>\n",
+       "      <th>18513152</th>\n",
+       "      <td>30961</td>\n",
+       "      <td>788</td>\n",
+       "      <td>2.5</td>\n",
        "    </tr>\n",
        "  </tbody>\n",
        "</table>\n",
@@ -355,14 +377,14 @@
       ],
       "text/plain": [
        "          userId  movieId  rating\n",
-       "2703571     4539     1492     2.5\n",
-       "12887545   21449     1147     4.0\n",
-       "16996832   28335      823     3.0\n",
-       "905459      1545      775     4.5\n",
-       "845713      1439      178     3.0"
+       "16724527   27904      941     3.0\n",
+       "6211895    10252      395     2.5\n",
+       "18570244   31047     6415     4.0\n",
+       "44365         74     3378     2.0\n",
+       "18513152   30961      788     2.5"
       ]
      },
-     "execution_count": 28,
+     "execution_count": 10,
      "metadata": {},
      "output_type": "execute_result"
     }
@@ -373,17 +395,17 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 29,
+   "execution_count": 51,
    "metadata": {},
    "outputs": [],
    "source": [
     "np.random.seed=2017\n",
-    "mask = np.random.rand(50000) < 0.8"
+    "mask = np.random.rand(500000) < 0.8"
    ]
   },
   {
    "cell_type": "code",
-   "execution_count": 30,
+   "execution_count": 53,
    "metadata": {},
    "outputs": [],
    "source": [
@@ -393,27 +415,54 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 36,
+   "execution_count": 61,
    "metadata": {},
    "outputs": [],
    "source": [
     "import keras\n",
+    "from keras.models import Sequential\n",
+    "from keras.layers import Activation, Dropout, Flatten, Dense\n",
+    "\n",
     "movie_input = keras.layers.Input(shape=[1],name='movieId')\n",
     "movie_embedding = keras.layers.Embedding(n_movies + 1, n_factors, name='movieEmbedding')(movie_input)\n",
-    "movie_vec = keras.layers.Flatten(name='movieFlatten')(movie_embedding)\n",
+    "movie_embedding_droput = keras.layers.Dropout(0.2)(movie_embedding) \n",
+    "movie_vec = keras.layers.Flatten(name='movieFlatten')(movie_embedding_droput)\n",
     "\n",
     "user_input = keras.layers.Input(shape=[1],name='userId')\n",
     "user_embedding = keras.layers.Embedding(n_users + 1, n_factors,name='userEmbedding')(user_input)\n",
-    "user_vec = keras.layers.Flatten(name='userFlatten')(user_embedding)\n",
+    "user_embedding_dropout = keras.layers.Dropout(0.2)(user_embedding)\n",
+    "user_vec = keras.layers.Flatten(name='userFlatten')(user_embedding_dropout)\n",
     "\n",
     "prod = keras.layers.Dot(axes=1, name=\"MatrixFactorization\")([movie_vec, user_vec] )\n",
-    "model = keras.Model([user_input, movie_input], prod)\n",
+    "act = keras.layers.Activation('hard_sigmoid')(prod)\n",
+    "fin_prod = keras.layers.Lambda(lambda x: 5*x + 0.5)(act)\n",
+    "model = keras.Model([user_input, movie_input], fin_prod)\n",
     "model.compile('adam', 'mse')"
    ]
   },
   {
    "cell_type": "code",
-   "execution_count": 37,
+   "execution_count": 20,
+   "metadata": {},
+   "outputs": [
+    {
+     "data": {
+      "text/plain": [
+       "<tf.Tensor 'movieId:0' shape=(?, 1) dtype=float32>"
+      ]
+     },
+     "execution_count": 20,
+     "metadata": {},
+     "output_type": "execute_result"
+    }
+   ],
+   "source": [
+    "movie_input"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": 62,
    "metadata": {},
    "outputs": [
     {
@@ -427,19 +476,27 @@
       "__________________________________________________________________________________________________\n",
       "userId (InputLayer)             (None, 1)            0                                            \n",
       "__________________________________________________________________________________________________\n",
-      "movieEmbedding (Embedding)      (None, 1, 3)         19785       movieId[0][0]                    \n",
+      "movieEmbedding (Embedding)      (None, 1, 3)         39444       movieId[0][0]                    \n",
+      "__________________________________________________________________________________________________\n",
+      "userEmbedding (Embedding)       (None, 1, 3)         321045      userId[0][0]                     \n",
       "__________________________________________________________________________________________________\n",
-      "userEmbedding (Embedding)       (None, 1, 3)         99732       userId[0][0]                     \n",
+      "dropout_9 (Dropout)             (None, 1, 3)         0           movieEmbedding[0][0]             \n",
       "__________________________________________________________________________________________________\n",
-      "movieFlatten (Flatten)          (None, 3)            0           movieEmbedding[0][0]             \n",
+      "dropout_10 (Dropout)            (None, 1, 3)         0           userEmbedding[0][0]              \n",
       "__________________________________________________________________________________________________\n",
-      "userFlatten (Flatten)           (None, 3)            0           userEmbedding[0][0]              \n",
+      "movieFlatten (Flatten)          (None, 3)            0           dropout_9[0][0]                  \n",
+      "__________________________________________________________________________________________________\n",
+      "userFlatten (Flatten)           (None, 3)            0           dropout_10[0][0]                 \n",
       "__________________________________________________________________________________________________\n",
       "MatrixFactorization (Dot)       (None, 1)            0           movieFlatten[0][0]               \n",
       "                                                                 userFlatten[0][0]                \n",
+      "__________________________________________________________________________________________________\n",
+      "activation_2 (Activation)       (None, 1)            0           MatrixFactorization[0][0]        \n",
+      "__________________________________________________________________________________________________\n",
+      "lambda_1 (Lambda)               (None, 1)            0           activation_2[0][0]               \n",
       "==================================================================================================\n",
-      "Total params: 119,517\n",
-      "Trainable params: 119,517\n",
+      "Total params: 360,489\n",
+      "Trainable params: 360,489\n",
       "Non-trainable params: 0\n",
       "__________________________________________________________________________________________________\n"
      ]
@@ -451,167 +508,27 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 45,
+   "execution_count": 24,
    "metadata": {},
-   "outputs": [
-    {
-     "data": {
-      "image/svg+xml": [
-       "<svg height=\"296pt\" viewBox=\"0.00 0.00 667.96 296.00\" width=\"668pt\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n",
-       "<g class=\"graph\" id=\"graph0\" transform=\"scale(1 1) rotate(0) translate(4 292)\">\n",
-       "<title>G</title>\n",
-       "<polygon fill=\"white\" points=\"-4,4 -4,-292 663.956,-292 663.956,4 -4,4\" stroke=\"none\"/>\n",
-       "<!-- 111995810536 -->\n",
-       "<g class=\"node\" id=\"node1\"><title>111995810536</title>\n",
-       "<polygon fill=\"none\" points=\"34.6172,-243.5 34.6172,-287.5 292.173,-287.5 292.173,-243.5 34.6172,-243.5\" stroke=\"black\"/>\n",
-       "<text font-family=\"Times,serif\" font-size=\"14.00\" text-anchor=\"middle\" x=\"100.736\" y=\"-261.3\">movieId: InputLayer</text>\n",
-       "<polyline fill=\"none\" points=\"166.855,-243.5 166.855,-287.5 \" stroke=\"black\"/>\n",
-       "<text font-family=\"Times,serif\" font-size=\"14.00\" text-anchor=\"middle\" x=\"194.69\" y=\"-272.3\">input:</text>\n",
-       "<polyline fill=\"none\" points=\"166.855,-265.5 222.524,-265.5 \" stroke=\"black\"/>\n",
-       "<text font-family=\"Times,serif\" font-size=\"14.00\" text-anchor=\"middle\" x=\"194.69\" y=\"-250.3\">output:</text>\n",
-       "<polyline fill=\"none\" points=\"222.524,-243.5 222.524,-287.5 \" stroke=\"black\"/>\n",
-       "<text font-family=\"Times,serif\" font-size=\"14.00\" text-anchor=\"middle\" x=\"257.349\" y=\"-272.3\">(None, 1)</text>\n",
-       "<polyline fill=\"none\" points=\"222.524,-265.5 292.173,-265.5 \" stroke=\"black\"/>\n",
-       "<text font-family=\"Times,serif\" font-size=\"14.00\" text-anchor=\"middle\" x=\"257.349\" y=\"-250.3\">(None, 1)</text>\n",
-       "</g>\n",
-       "<!-- 111995810704 -->\n",
-       "<g class=\"node\" id=\"node3\"><title>111995810704</title>\n",
-       "<polygon fill=\"none\" points=\"0,-162.5 0,-206.5 326.79,-206.5 326.79,-162.5 0,-162.5\" stroke=\"black\"/>\n",
-       "<text font-family=\"Times,serif\" font-size=\"14.00\" text-anchor=\"middle\" x=\"93.7363\" y=\"-180.3\">movieEmbedding: Embedding</text>\n",
-       "<polyline fill=\"none\" points=\"187.473,-162.5 187.473,-206.5 \" stroke=\"black\"/>\n",
-       "<text font-family=\"Times,serif\" font-size=\"14.00\" text-anchor=\"middle\" x=\"215.307\" y=\"-191.3\">input:</text>\n",
-       "<polyline fill=\"none\" points=\"187.473,-184.5 243.142,-184.5 \" stroke=\"black\"/>\n",
-       "<text font-family=\"Times,serif\" font-size=\"14.00\" text-anchor=\"middle\" x=\"215.307\" y=\"-169.3\">output:</text>\n",
-       "<polyline fill=\"none\" points=\"243.142,-162.5 243.142,-206.5 \" stroke=\"black\"/>\n",
-       "<text font-family=\"Times,serif\" font-size=\"14.00\" text-anchor=\"middle\" x=\"284.966\" y=\"-191.3\">(None, 1)</text>\n",
-       "<polyline fill=\"none\" points=\"243.142,-184.5 326.79,-184.5 \" stroke=\"black\"/>\n",
-       "<text font-family=\"Times,serif\" font-size=\"14.00\" text-anchor=\"middle\" x=\"284.966\" y=\"-169.3\">(None, 1, 3)</text>\n",
-       "</g>\n",
-       "<!-- 111995810536&#45;&gt;111995810704 -->\n",
-       "<g class=\"edge\" id=\"edge1\"><title>111995810536-&gt;111995810704</title>\n",
-       "<path d=\"M163.395,-243.329C163.395,-235.183 163.395,-225.699 163.395,-216.797\" fill=\"none\" stroke=\"black\"/>\n",
-       "<polygon fill=\"black\" points=\"166.895,-216.729 163.395,-206.729 159.895,-216.729 166.895,-216.729\" stroke=\"black\"/>\n",
-       "</g>\n",
-       "<!-- 111995810760 -->\n",
-       "<g class=\"node\" id=\"node2\"><title>111995810760</title>\n",
-       "<polygon fill=\"none\" points=\"379.452,-243.5 379.452,-287.5 625.338,-287.5 625.338,-243.5 379.452,-243.5\" stroke=\"black\"/>\n",
-       "<text font-family=\"Times,serif\" font-size=\"14.00\" text-anchor=\"middle\" x=\"439.736\" y=\"-261.3\">userId: InputLayer</text>\n",
-       "<polyline fill=\"none\" points=\"500.021,-243.5 500.021,-287.5 \" stroke=\"black\"/>\n",
-       "<text font-family=\"Times,serif\" font-size=\"14.00\" text-anchor=\"middle\" x=\"527.855\" y=\"-272.3\">input:</text>\n",
-       "<polyline fill=\"none\" points=\"500.021,-265.5 555.69,-265.5 \" stroke=\"black\"/>\n",
-       "<text font-family=\"Times,serif\" font-size=\"14.00\" text-anchor=\"middle\" x=\"527.855\" y=\"-250.3\">output:</text>\n",
-       "<polyline fill=\"none\" points=\"555.69,-243.5 555.69,-287.5 \" stroke=\"black\"/>\n",
-       "<text font-family=\"Times,serif\" font-size=\"14.00\" text-anchor=\"middle\" x=\"590.514\" y=\"-272.3\">(None, 1)</text>\n",
-       "<polyline fill=\"none\" points=\"555.69,-265.5 625.338,-265.5 \" stroke=\"black\"/>\n",
-       "<text font-family=\"Times,serif\" font-size=\"14.00\" text-anchor=\"middle\" x=\"590.514\" y=\"-250.3\">(None, 1)</text>\n",
-       "</g>\n",
-       "<!-- 111995810872 -->\n",
-       "<g class=\"node\" id=\"node4\"><title>111995810872</title>\n",
-       "<polygon fill=\"none\" points=\"344.834,-162.5 344.834,-206.5 659.956,-206.5 659.956,-162.5 344.834,-162.5\" stroke=\"black\"/>\n",
-       "<text font-family=\"Times,serif\" font-size=\"14.00\" text-anchor=\"middle\" x=\"432.736\" y=\"-180.3\">userEmbedding: Embedding</text>\n",
-       "<polyline fill=\"none\" points=\"520.638,-162.5 520.638,-206.5 \" stroke=\"black\"/>\n",
-       "<text font-family=\"Times,serif\" font-size=\"14.00\" text-anchor=\"middle\" x=\"548.473\" y=\"-191.3\">input:</text>\n",
-       "<polyline fill=\"none\" points=\"520.638,-184.5 576.307,-184.5 \" stroke=\"black\"/>\n",
-       "<text font-family=\"Times,serif\" font-size=\"14.00\" text-anchor=\"middle\" x=\"548.473\" y=\"-169.3\">output:</text>\n",
-       "<polyline fill=\"none\" points=\"576.307,-162.5 576.307,-206.5 \" stroke=\"black\"/>\n",
-       "<text font-family=\"Times,serif\" font-size=\"14.00\" text-anchor=\"middle\" x=\"618.131\" y=\"-191.3\">(None, 1)</text>\n",
-       "<polyline fill=\"none\" points=\"576.307,-184.5 659.956,-184.5 \" stroke=\"black\"/>\n",
-       "<text font-family=\"Times,serif\" font-size=\"14.00\" text-anchor=\"middle\" x=\"618.131\" y=\"-169.3\">(None, 1, 3)</text>\n",
-       "</g>\n",
-       "<!-- 111995810760&#45;&gt;111995810872 -->\n",
-       "<g class=\"edge\" id=\"edge2\"><title>111995810760-&gt;111995810872</title>\n",
-       "<path d=\"M502.395,-243.329C502.395,-235.183 502.395,-225.699 502.395,-216.797\" fill=\"none\" stroke=\"black\"/>\n",
-       "<polygon fill=\"black\" points=\"505.895,-216.729 502.395,-206.729 498.895,-216.729 505.895,-216.729\" stroke=\"black\"/>\n",
-       "</g>\n",
-       "<!-- 111995810816 -->\n",
-       "<g class=\"node\" id=\"node5\"><title>111995810816</title>\n",
-       "<polygon fill=\"none\" points=\"50.6621,-81.5 50.6621,-125.5 326.128,-125.5 326.128,-81.5 50.6621,-81.5\" stroke=\"black\"/>\n",
-       "<text font-family=\"Times,serif\" font-size=\"14.00\" text-anchor=\"middle\" x=\"118.736\" y=\"-99.3\">movieFlatten: Flatten</text>\n",
-       "<polyline fill=\"none\" points=\"186.811,-81.5 186.811,-125.5 \" stroke=\"black\"/>\n",
-       "<text font-family=\"Times,serif\" font-size=\"14.00\" text-anchor=\"middle\" x=\"214.645\" y=\"-110.3\">input:</text>\n",
-       "<polyline fill=\"none\" points=\"186.811,-103.5 242.479,-103.5 \" stroke=\"black\"/>\n",
-       "<text font-family=\"Times,serif\" font-size=\"14.00\" text-anchor=\"middle\" x=\"214.645\" y=\"-88.3\">output:</text>\n",
-       "<polyline fill=\"none\" points=\"242.479,-81.5 242.479,-125.5 \" stroke=\"black\"/>\n",
-       "<text font-family=\"Times,serif\" font-size=\"14.00\" text-anchor=\"middle\" x=\"284.304\" y=\"-110.3\">(None, 1, 3)</text>\n",
-       "<polyline fill=\"none\" points=\"242.479,-103.5 326.128,-103.5 \" stroke=\"black\"/>\n",
-       "<text font-family=\"Times,serif\" font-size=\"14.00\" text-anchor=\"middle\" x=\"284.304\" y=\"-88.3\">(None, 3)</text>\n",
-       "</g>\n",
-       "<!-- 111995810704&#45;&gt;111995810816 -->\n",
-       "<g class=\"edge\" id=\"edge3\"><title>111995810704-&gt;111995810816</title>\n",
-       "<path d=\"M170.095,-162.329C172.701,-154.094 175.739,-144.493 178.583,-135.507\" fill=\"none\" stroke=\"black\"/>\n",
-       "<polygon fill=\"black\" points=\"181.997,-136.319 181.677,-125.729 175.323,-134.207 181.997,-136.319\" stroke=\"black\"/>\n",
-       "</g>\n",
-       "<!-- 111995811040 -->\n",
-       "<g class=\"node\" id=\"node6\"><title>111995811040</title>\n",
-       "<polygon fill=\"none\" points=\"357.497,-81.5 357.497,-125.5 621.293,-125.5 621.293,-81.5 357.497,-81.5\" stroke=\"black\"/>\n",
-       "<text font-family=\"Times,serif\" font-size=\"14.00\" text-anchor=\"middle\" x=\"419.736\" y=\"-99.3\">userFlatten: Flatten</text>\n",
-       "<polyline fill=\"none\" points=\"481.976,-81.5 481.976,-125.5 \" stroke=\"black\"/>\n",
-       "<text font-family=\"Times,serif\" font-size=\"14.00\" text-anchor=\"middle\" x=\"509.811\" y=\"-110.3\">input:</text>\n",
-       "<polyline fill=\"none\" points=\"481.976,-103.5 537.645,-103.5 \" stroke=\"black\"/>\n",
-       "<text font-family=\"Times,serif\" font-size=\"14.00\" text-anchor=\"middle\" x=\"509.811\" y=\"-88.3\">output:</text>\n",
-       "<polyline fill=\"none\" points=\"537.645,-81.5 537.645,-125.5 \" stroke=\"black\"/>\n",
-       "<text font-family=\"Times,serif\" font-size=\"14.00\" text-anchor=\"middle\" x=\"579.469\" y=\"-110.3\">(None, 1, 3)</text>\n",
-       "<polyline fill=\"none\" points=\"537.645,-103.5 621.293,-103.5 \" stroke=\"black\"/>\n",
-       "<text font-family=\"Times,serif\" font-size=\"14.00\" text-anchor=\"middle\" x=\"579.469\" y=\"-88.3\">(None, 3)</text>\n",
-       "</g>\n",
-       "<!-- 111995810872&#45;&gt;111995811040 -->\n",
-       "<g class=\"edge\" id=\"edge4\"><title>111995810872-&gt;111995811040</title>\n",
-       "<path d=\"M498.911,-162.329C497.571,-154.183 496.01,-144.699 494.545,-135.797\" fill=\"none\" stroke=\"black\"/>\n",
-       "<polygon fill=\"black\" points=\"497.966,-135.028 492.888,-125.729 491.059,-136.165 497.966,-135.028\" stroke=\"black\"/>\n",
-       "</g>\n",
-       "<!-- 111995811152 -->\n",
-       "<g class=\"node\" id=\"node7\"><title>111995811152</title>\n",
-       "<polygon fill=\"none\" points=\"162.572,-0.5 162.572,-44.5 514.218,-44.5 514.218,-0.5 162.572,-0.5\" stroke=\"black\"/>\n",
-       "<text font-family=\"Times,serif\" font-size=\"14.00\" text-anchor=\"middle\" x=\"240.75\" y=\"-18.3\">MatrixFactorization: Dot</text>\n",
-       "<polyline fill=\"none\" points=\"318.928,-0.5 318.928,-44.5 \" stroke=\"black\"/>\n",
-       "<text font-family=\"Times,serif\" font-size=\"14.00\" text-anchor=\"middle\" x=\"346.762\" y=\"-29.3\">input:</text>\n",
-       "<polyline fill=\"none\" points=\"318.928,-22.5 374.597,-22.5 \" stroke=\"black\"/>\n",
-       "<text font-family=\"Times,serif\" font-size=\"14.00\" text-anchor=\"middle\" x=\"346.762\" y=\"-7.3\">output:</text>\n",
-       "<polyline fill=\"none\" points=\"374.597,-0.5 374.597,-44.5 \" stroke=\"black\"/>\n",
-       "<text font-family=\"Times,serif\" font-size=\"14.00\" text-anchor=\"middle\" x=\"444.407\" y=\"-29.3\">[(None, 3), (None, 3)]</text>\n",
-       "<polyline fill=\"none\" points=\"374.597,-22.5 514.218,-22.5 \" stroke=\"black\"/>\n",
-       "<text font-family=\"Times,serif\" font-size=\"14.00\" text-anchor=\"middle\" x=\"443.921\" y=\"-7.3\">(None, 1)</text>\n",
-       "</g>\n",
-       "<!-- 111995810816&#45;&gt;111995811152 -->\n",
-       "<g class=\"edge\" id=\"edge5\"><title>111995810816-&gt;111995811152</title>\n",
-       "<path d=\"M228.592,-81.3294C247.246,-71.5049 269.591,-59.7366 289.24,-49.3883\" fill=\"none\" stroke=\"black\"/>\n",
-       "<polygon fill=\"black\" points=\"291.13,-52.3486 298.347,-44.5919 287.868,-46.1551 291.13,-52.3486\" stroke=\"black\"/>\n",
-       "</g>\n",
-       "<!-- 111995811040&#45;&gt;111995811152 -->\n",
-       "<g class=\"edge\" id=\"edge6\"><title>111995811040-&gt;111995811152</title>\n",
-       "<path d=\"M448.93,-81.3294C430.066,-71.4605 407.454,-59.63 387.609,-49.2479\" fill=\"none\" stroke=\"black\"/>\n",
-       "<polygon fill=\"black\" points=\"389.193,-46.1264 378.71,-44.5919 385.948,-52.3288 389.193,-46.1264\" stroke=\"black\"/>\n",
-       "</g>\n",
-       "</g>\n",
-       "</svg>"
-      ],
-      "text/plain": [
-       "<IPython.core.display.SVG object>"
-      ]
-     },
-     "execution_count": 45,
-     "metadata": {},
-     "output_type": "execute_result"
-    }
-   ],
+   "outputs": [],
    "source": [
     "from keras.utils.vis_utils import model_to_dot\n",
     "from IPython.display import SVG\n",
-    "SVG(model_to_dot(model,  show_shapes=True, show_layer_names=True, rankdir='HB').create(prog='dot', format='svg'))"
+    "# SVG(model_to_dot(model,  show_shapes=True, show_layer_names=True, rankdir='HB').create(prog='dot', format='svg'))"
    ]
   },
   {
    "cell_type": "code",
-   "execution_count": 39,
+   "execution_count": 33,
    "metadata": {},
    "outputs": [
     {
      "data": {
       "text/plain": [
-       "array([ 4539, 21449, 28335, ..., 26948,  1766, 31200], dtype=int32)"
+       "array([10252,    74, 28423, ..., 18312,  2874,  1637], dtype=int32)"
       ]
      },
-     "execution_count": 39,
+     "execution_count": 33,
      "metadata": {},
      "output_type": "execute_result"
     }
@@ -622,243 +539,192 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 40,
+   "execution_count": 57,
    "metadata": {},
    "outputs": [
     {
      "name": "stdout",
      "output_type": "stream",
      "text": [
-      "Epoch 1/100\n",
-      "40102/40102 [==============================] - 10s 240us/step - loss: 13.5493\n",
-      "Epoch 2/100\n",
-      "40102/40102 [==============================] - 9s 227us/step - loss: 13.5154\n",
-      "Epoch 3/100\n",
-      "40102/40102 [==============================] - 9s 237us/step - loss: 13.3653\n",
-      "Epoch 4/100\n",
-      "40102/40102 [==============================] - 10s 250us/step - loss: 13.0370\n",
-      "Epoch 5/100\n",
-      "40102/40102 [==============================] - 10s 243us/step - loss: 12.5399\n",
-      "Epoch 6/100\n",
-      "40102/40102 [==============================] - 10s 246us/step - loss: 11.9038\n",
-      "Epoch 7/100\n",
-      "40102/40102 [==============================] - 12s 289us/step - loss: 11.1570\n",
-      "Epoch 8/100\n",
-      "40102/40102 [==============================] - 10s 240us/step - loss: 10.3298\n",
-      "Epoch 9/100\n",
-      "40102/40102 [==============================] - 9s 225us/step - loss: 9.4517\n",
-      "Epoch 10/100\n",
-      "40102/40102 [==============================] - 9s 223us/step - loss: 8.5550\n",
-      "Epoch 11/100\n",
-      "40102/40102 [==============================] - 11s 264us/step - loss: 7.6719\n",
-      "Epoch 12/100\n",
-      "40102/40102 [==============================] - 11s 264us/step - loss: 6.8300\n",
-      "Epoch 13/100\n",
-      "40102/40102 [==============================] - 10s 245us/step - loss: 6.0531\n",
-      "Epoch 14/100\n",
-      "40102/40102 [==============================] - 11s 264us/step - loss: 5.3547\n",
-      "Epoch 15/100\n",
-      "40102/40102 [==============================] - 11s 263us/step - loss: 4.7401\n",
-      "Epoch 16/100\n",
-      "40102/40102 [==============================] - 11s 266us/step - loss: 4.2061\n",
-      "Epoch 17/100\n",
-      "40102/40102 [==============================] - 11s 264us/step - loss: 3.7450\n",
-      "Epoch 18/100\n",
-      "40102/40102 [==============================] - 10s 254us/step - loss: 3.3484\n",
-      "Epoch 19/100\n",
-      "40102/40102 [==============================] - 11s 264us/step - loss: 3.0063\n",
-      "Epoch 20/100\n",
-      "40102/40102 [==============================] - 11s 268us/step - loss: 2.7107\n",
-      "Epoch 21/100\n",
-      "40102/40102 [==============================] - 11s 268us/step - loss: 2.4542\n",
-      "Epoch 22/100\n",
-      "40102/40102 [==============================] - 11s 283us/step - loss: 2.2311\n",
-      "Epoch 23/100\n",
-      "40102/40102 [==============================] - 12s 288us/step - loss: 2.0362\n",
-      "Epoch 24/100\n",
-      "40102/40102 [==============================] - 10s 253us/step - loss: 1.8644\n",
-      "Epoch 25/100\n",
-      "40102/40102 [==============================] - 11s 275us/step - loss: 1.7142\n",
-      "Epoch 26/100\n",
-      "40102/40102 [==============================] - 15s 385us/step - loss: 1.5807\n",
-      "Epoch 27/100\n",
-      "40102/40102 [==============================] - 13s 314us/step - loss: 1.4629\n",
-      "Epoch 28/100\n",
-      "40102/40102 [==============================] - 12s 301us/step - loss: 1.3578\n",
-      "Epoch 29/100\n",
-      "40102/40102 [==============================] - 12s 302us/step - loss: 1.2640\n",
-      "Epoch 30/100\n",
-      "40102/40102 [==============================] - 11s 283us/step - loss: 1.1801\n",
-      "Epoch 31/100\n",
-      "40102/40102 [==============================] - 11s 281us/step - loss: 1.1048\n",
-      "Epoch 32/100\n",
-      "40102/40102 [==============================] - 11s 273us/step - loss: 1.0371\n",
-      "Epoch 33/100\n",
-      "40102/40102 [==============================] - 11s 278us/step - loss: 0.9767\n",
-      "Epoch 34/100\n",
-      "40102/40102 [==============================] - 11s 273us/step - loss: 0.9211\n",
-      "Epoch 35/100\n",
-      "40102/40102 [==============================] - 12s 288us/step - loss: 0.8711\n",
-      "Epoch 36/100\n",
-      "40102/40102 [==============================] - 11s 266us/step - loss: 0.8256\n",
-      "Epoch 37/100\n",
-      "40102/40102 [==============================] - 11s 273us/step - loss: 0.7842\n",
-      "Epoch 38/100\n",
-      "40102/40102 [==============================] - 11s 284us/step - loss: 0.7463\n",
-      "Epoch 39/100\n",
-      "40102/40102 [==============================] - 14s 358us/step - loss: 0.7114\n",
-      "Epoch 40/100\n",
-      "40102/40102 [==============================] - 17s 436us/step - loss: 0.6796\n",
-      "Epoch 41/100\n",
-      "40102/40102 [==============================] - 18s 447us/step - loss: 0.6502\n",
-      "Epoch 42/100\n",
-      "40102/40102 [==============================] - 16s 396us/step - loss: 0.6230\n",
-      "Epoch 43/100\n",
-      "40102/40102 [==============================] - 17s 419us/step - loss: 0.5979\n",
-      "Epoch 44/100\n",
-      "40102/40102 [==============================] - 15s 381us/step - loss: 0.5746\n",
-      "Epoch 45/100\n",
-      "40102/40102 [==============================] - 16s 392us/step - loss: 0.5530\n",
-      "Epoch 46/100\n",
-      "40102/40102 [==============================] - 17s 418us/step - loss: 0.5326\n",
-      "Epoch 47/100\n",
-      "40102/40102 [==============================] - 16s 396us/step - loss: 0.5135\n",
-      "Epoch 48/100\n",
-      "40102/40102 [==============================] - 14s 358us/step - loss: 0.4954\n",
-      "Epoch 49/100\n",
-      "40102/40102 [==============================] - 14s 356us/step - loss: 0.4783\n",
-      "Epoch 50/100\n",
-      "40102/40102 [==============================] - 18s 439us/step - loss: 0.4618\n",
-      "Epoch 51/100\n",
-      "40102/40102 [==============================] - 12s 309us/step - loss: 0.4460\n",
-      "Epoch 52/100\n",
-      "40102/40102 [==============================] - 11s 271us/step - loss: 0.4308\n",
-      "Epoch 53/100\n",
-      "40102/40102 [==============================] - 12s 310us/step - loss: 0.4163\n",
-      "Epoch 54/100\n",
-      "40102/40102 [==============================] - 13s 319us/step - loss: 0.4022\n",
-      "Epoch 55/100\n",
-      "40102/40102 [==============================] - 13s 324us/step - loss: 0.3885\n",
-      "Epoch 56/100\n",
-      "40102/40102 [==============================] - 14s 342us/step - loss: 0.3752\n",
-      "Epoch 57/100\n",
-      "40102/40102 [==============================] - 15s 379us/step - loss: 0.3625\n",
-      "Epoch 58/100\n",
-      "40102/40102 [==============================] - 15s 377us/step - loss: 0.3501\n",
-      "Epoch 59/100\n",
-      "40102/40102 [==============================] - 15s 368us/step - loss: 0.3381\n",
-      "Epoch 60/100\n",
-      "40102/40102 [==============================] - 15s 371us/step - loss: 0.3264\n",
-      "Epoch 61/100\n",
-      "40102/40102 [==============================] - 15s 366us/step - loss: 0.3152\n",
-      "Epoch 62/100\n",
-      "40102/40102 [==============================] - 14s 355us/step - loss: 0.3044\n",
-      "Epoch 63/100\n",
-      "40102/40102 [==============================] - 13s 321us/step - loss: 0.2937\n",
-      "Epoch 64/100\n",
-      "40102/40102 [==============================] - 12s 308us/step - loss: 0.2833\n",
-      "Epoch 65/100\n",
-      "40102/40102 [==============================] - 13s 312us/step - loss: 0.2735\n",
-      "Epoch 66/100\n",
-      "40102/40102 [==============================] - 12s 305us/step - loss: 0.2639\n",
-      "Epoch 67/100\n",
-      "40102/40102 [==============================] - 16s 409us/step - loss: 0.2545\n",
-      "Epoch 68/100\n",
-      "40102/40102 [==============================] - 11s 268us/step - loss: 0.2454\n",
-      "Epoch 69/100\n",
-      "40102/40102 [==============================] - 9s 233us/step - loss: 0.2367\n",
-      "Epoch 70/100\n",
-      "40102/40102 [==============================] - 10s 254us/step - loss: 0.2283\n",
-      "Epoch 71/100\n",
-      "40102/40102 [==============================] - 10s 258us/step - loss: 0.2199\n",
-      "Epoch 72/100\n",
-      "40102/40102 [==============================] - 10s 254us/step - loss: 0.2120\n",
-      "Epoch 73/100\n",
-      "40102/40102 [==============================] - 10s 239us/step - loss: 0.2043\n",
-      "Epoch 74/100\n",
-      "40102/40102 [==============================] - 11s 277us/step - loss: 0.1969\n",
-      "Epoch 75/100\n",
-      "40102/40102 [==============================] - 10s 250us/step - loss: 0.1897\n",
-      "Epoch 76/100\n",
-      "40102/40102 [==============================] - 11s 283us/step - loss: 0.1827\n",
-      "Epoch 77/100\n",
-      "40102/40102 [==============================] - 10s 261us/step - loss: 0.1760\n",
-      "Epoch 78/100\n",
-      "40102/40102 [==============================] - 9s 234us/step - loss: 0.1697\n",
-      "Epoch 79/100\n",
-      "40102/40102 [==============================] - 10s 259us/step - loss: 0.1634\n",
-      "Epoch 80/100\n",
-      "40102/40102 [==============================] - 10s 245us/step - loss: 0.1573\n",
-      "Epoch 81/100\n",
-      "40102/40102 [==============================] - 10s 248us/step - loss: 0.1515\n",
-      "Epoch 82/100\n",
-      "40102/40102 [==============================] - 11s 263us/step - loss: 0.1459\n",
-      "Epoch 83/100\n",
-      "40102/40102 [==============================] - 12s 305us/step - loss: 0.1405\n",
-      "Epoch 84/100\n",
-      "40102/40102 [==============================] - 12s 297us/step - loss: 0.1356\n",
-      "Epoch 85/100\n",
-      "40102/40102 [==============================] - 11s 281us/step - loss: 0.1304\n",
-      "Epoch 86/100\n",
-      "40102/40102 [==============================] - 10s 244us/step - loss: 0.1258\n",
-      "Epoch 87/100\n",
-      "40102/40102 [==============================] - 10s 241us/step - loss: 0.1211\n",
-      "Epoch 88/100\n",
-      "40102/40102 [==============================] - 10s 255us/step - loss: 0.1168\n",
-      "Epoch 89/100\n",
-      "40102/40102 [==============================] - 11s 271us/step - loss: 0.1125\n",
-      "Epoch 90/100\n",
-      "40102/40102 [==============================] - 9s 235us/step - loss: 0.1085\n",
-      "Epoch 91/100\n",
-      "40102/40102 [==============================] - 10s 243us/step - loss: 0.1048\n",
-      "Epoch 92/100\n",
-      "40102/40102 [==============================] - 10s 257us/step - loss: 0.1011\n",
-      "Epoch 93/100\n",
-      "40102/40102 [==============================] - 11s 263us/step - loss: 0.0975\n",
-      "Epoch 94/100\n",
-      "40102/40102 [==============================] - 10s 255us/step - loss: 0.0942\n",
-      "Epoch 95/100\n",
-      "40102/40102 [==============================] - 11s 268us/step - loss: 0.0908\n",
-      "Epoch 96/100\n",
-      "40102/40102 [==============================] - 10s 261us/step - loss: 0.0878\n",
-      "Epoch 97/100\n",
-      "40102/40102 [==============================] - 11s 267us/step - loss: 0.0847\n",
-      "Epoch 98/100\n",
-      "40102/40102 [==============================] - 9s 227us/step - loss: 0.0819\n",
-      "Epoch 99/100\n",
-      "40102/40102 [==============================] - 10s 260us/step - loss: 0.0790\n",
-      "Epoch 100/100\n",
-      "40102/40102 [==============================] - 11s 268us/step - loss: 0.0765\n"
+      "Epoch 1/70\n",
+      "399970/399970 [==============================] - 4s 9us/step - loss: 6.8022\n",
+      "Epoch 2/70\n",
+      "399970/399970 [==============================] - 4s 9us/step - loss: 6.4542\n",
+      "Epoch 3/70\n",
+      "399970/399970 [==============================] - 4s 9us/step - loss: 6.1460\n",
+      "Epoch 4/70\n",
+      "399970/399970 [==============================] - 4s 9us/step - loss: 5.8761\n",
+      "Epoch 5/70\n",
+      "399970/399970 [==============================] - 4s 9us/step - loss: 5.6632\n",
+      "Epoch 6/70\n",
+      "399970/399970 [==============================] - 4s 9us/step - loss: 5.4959\n",
+      "Epoch 7/70\n",
+      "399970/399970 [==============================] - 4s 10us/step - loss: 5.3316\n",
+      "Epoch 8/70\n",
+      "399970/399970 [==============================] - 4s 9us/step - loss: 5.2006\n",
+      "Epoch 9/70\n",
+      "399970/399970 [==============================] - 4s 9us/step - loss: 5.0483\n",
+      "Epoch 10/70\n",
+      "399970/399970 [==============================] - 4s 9us/step - loss: 4.9598\n",
+      "Epoch 11/70\n",
+      "399970/399970 [==============================] - 4s 9us/step - loss: 4.8682\n",
+      "Epoch 12/70\n",
+      "399970/399970 [==============================] - 4s 9us/step - loss: 4.7704\n",
+      "Epoch 13/70\n",
+      "399970/399970 [==============================] - 4s 9us/step - loss: 4.7105\n",
+      "Epoch 14/70\n",
+      "399970/399970 [==============================] - 4s 9us/step - loss: 4.6268\n",
+      "Epoch 15/70\n",
+      "399970/399970 [==============================] - 4s 9us/step - loss: 4.5743\n",
+      "Epoch 16/70\n",
+      "399970/399970 [==============================] - 4s 9us/step - loss: 4.5014\n",
+      "Epoch 17/70\n",
+      "399970/399970 [==============================] - 4s 9us/step - loss: 4.4724\n",
+      "Epoch 18/70\n",
+      "399970/399970 [==============================] - 4s 9us/step - loss: 4.4071\n",
+      "Epoch 19/70\n",
+      "399970/399970 [==============================] - 4s 9us/step - loss: 4.3552\n",
+      "Epoch 20/70\n",
+      "399970/399970 [==============================] - 4s 9us/step - loss: 4.3177\n",
+      "Epoch 21/70\n",
+      "399970/399970 [==============================] - 4s 9us/step - loss: 4.2787\n",
+      "Epoch 22/70\n",
+      "399970/399970 [==============================] - 4s 9us/step - loss: 4.2458\n",
+      "Epoch 23/70\n",
+      "399970/399970 [==============================] - 4s 9us/step - loss: 4.1943\n",
+      "Epoch 24/70\n",
+      "399970/399970 [==============================] - 4s 9us/step - loss: 4.1749\n",
+      "Epoch 25/70\n",
+      "399970/399970 [==============================] - 4s 9us/step - loss: 4.1291\n",
+      "Epoch 26/70\n",
+      "399970/399970 [==============================] - 4s 9us/step - loss: 4.1029\n",
+      "Epoch 27/70\n",
+      "399970/399970 [==============================] - 4s 9us/step - loss: 4.0792\n",
+      "Epoch 28/70\n",
+      "399970/399970 [==============================] - 4s 9us/step - loss: 4.0264\n",
+      "Epoch 29/70\n",
+      "399970/399970 [==============================] - 4s 9us/step - loss: 4.0072\n",
+      "Epoch 30/70\n",
+      "399970/399970 [==============================] - 4s 9us/step - loss: 3.9635\n",
+      "Epoch 31/70\n",
+      "399970/399970 [==============================] - 4s 9us/step - loss: 3.9532\n",
+      "Epoch 32/70\n",
+      "399970/399970 [==============================] - 4s 9us/step - loss: 3.9410\n",
+      "Epoch 33/70\n",
+      "399970/399970 [==============================] - 4s 9us/step - loss: 3.9103\n",
+      "Epoch 34/70\n",
+      "399970/399970 [==============================] - 4s 9us/step - loss: 3.8638\n",
+      "Epoch 35/70\n",
+      "399970/399970 [==============================] - 4s 9us/step - loss: 3.8461\n",
+      "Epoch 36/70\n",
+      "399970/399970 [==============================] - 4s 9us/step - loss: 3.8150\n",
+      "Epoch 37/70\n",
+      "399970/399970 [==============================] - 4s 9us/step - loss: 3.7920\n",
+      "Epoch 38/70\n",
+      "399970/399970 [==============================] - 4s 9us/step - loss: 3.7589\n",
+      "Epoch 39/70\n",
+      "399970/399970 [==============================] - 4s 9us/step - loss: 3.7554\n",
+      "Epoch 40/70\n",
+      "399970/399970 [==============================] - 4s 9us/step - loss: 3.7459\n",
+      "Epoch 41/70\n",
+      "399970/399970 [==============================] - 4s 9us/step - loss: 3.7175\n",
+      "Epoch 42/70\n",
+      "399970/399970 [==============================] - 4s 9us/step - loss: 3.6891\n",
+      "Epoch 43/70\n",
+      "399970/399970 [==============================] - 4s 9us/step - loss: 3.6560\n",
+      "Epoch 44/70\n",
+      "399970/399970 [==============================] - 4s 10us/step - loss: 3.6490\n",
+      "Epoch 45/70\n",
+      "399970/399970 [==============================] - 4s 9us/step - loss: 3.6068\n",
+      "Epoch 46/70\n",
+      "399970/399970 [==============================] - 4s 9us/step - loss: 3.5984\n",
+      "Epoch 47/70\n",
+      "399970/399970 [==============================] - 4s 9us/step - loss: 3.5918\n",
+      "Epoch 48/70\n",
+      "399970/399970 [==============================] - 4s 9us/step - loss: 3.5635\n",
+      "Epoch 49/70\n",
+      "399970/399970 [==============================] - 4s 9us/step - loss: 3.5487\n",
+      "Epoch 50/70\n",
+      "399970/399970 [==============================] - 4s 9us/step - loss: 3.5475\n",
+      "Epoch 51/70\n",
+      "399970/399970 [==============================] - 4s 9us/step - loss: 3.5196\n",
+      "Epoch 52/70\n",
+      "399970/399970 [==============================] - 4s 9us/step - loss: 3.4962\n",
+      "Epoch 53/70\n",
+      "399970/399970 [==============================] - 4s 9us/step - loss: 3.4761\n",
+      "Epoch 54/70\n",
+      "399970/399970 [==============================] - 4s 9us/step - loss: 3.4712\n",
+      "Epoch 55/70\n",
+      "399970/399970 [==============================] - 4s 9us/step - loss: 3.4406\n",
+      "Epoch 56/70\n",
+      "399970/399970 [==============================] - 4s 9us/step - loss: 3.4446\n",
+      "Epoch 57/70\n",
+      "399970/399970 [==============================] - 4s 9us/step - loss: 3.4248\n",
+      "Epoch 58/70\n",
+      "399970/399970 [==============================] - 4s 9us/step - loss: 3.4062\n",
+      "Epoch 59/70\n",
+      "399970/399970 [==============================] - 4s 9us/step - loss: 3.3853\n",
+      "Epoch 60/70\n",
+      "399970/399970 [==============================] - 4s 9us/step - loss: 3.3702\n",
+      "Epoch 61/70\n",
+      "399970/399970 [==============================] - 4s 10us/step - loss: 3.3637\n",
+      "Epoch 62/70\n",
+      "399970/399970 [==============================] - 4s 9us/step - loss: 3.3356\n",
+      "Epoch 63/70\n",
+      "399970/399970 [==============================] - 4s 10us/step - loss: 3.3324\n",
+      "Epoch 64/70\n",
+      "399970/399970 [==============================] - 4s 10us/step - loss: 3.3188\n",
+      "Epoch 65/70\n",
+      "399970/399970 [==============================] - 4s 10us/step - loss: 3.3048\n",
+      "Epoch 66/70\n",
+      "399970/399970 [==============================] - 4s 9us/step - loss: 3.2958\n",
+      "Epoch 67/70\n",
+      "399970/399970 [==============================] - 4s 9us/step - loss: 3.2893\n",
+      "Epoch 68/70\n",
+      "399970/399970 [==============================] - 4s 9us/step - loss: 3.2823\n",
+      "Epoch 69/70\n",
+      "399970/399970 [==============================] - 4s 9us/step - loss: 3.2694\n",
+      "Epoch 70/70\n",
+      "399970/399970 [==============================] - 4s 9us/step - loss: 3.2510\n"
+     ]
+    },
+    {
+     "name": "stderr",
+     "output_type": "stream",
+     "text": [
+      "UsageError: Line magic function `%%wandb` not found.\n"
      ]
     }
    ],
    "source": [
-    "history = model.fit([traindf.userId.values, traindf.movieId.values], traindf.rating.values, epochs=100)"
+    "history = model.fit([traindf.userId.values, traindf.movieId.values], traindf.rating.values, epochs=70, batch_size = 512, callbacks=[WandbCallback()])"
    ]
   },
   {
    "cell_type": "code",
-   "execution_count": 41,
+   "execution_count": 58,
    "metadata": {},
    "outputs": [
     {
      "data": {
       "text/plain": [
-       "[<matplotlib.lines.Line2D at 0x1a44fef9b0>]"
+       "[<matplotlib.lines.Line2D at 0x7fafccecdc18>]"
       ]
      },
-     "execution_count": 41,
+     "execution_count": 58,
      "metadata": {},
      "output_type": "execute_result"
     },
     {
      "data": {
-      "image/png": "\n",
+      "image/png": "\n",
       "text/plain": [
        "<Figure size 432x288 with 1 Axes>"
       ]
      },
-     "metadata": {},
+     "metadata": {
+      "needs_background": "light"
+     },
      "output_type": "display_data"
     }
    ],
@@ -868,16 +734,16 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 44,
+   "execution_count": 59,
    "metadata": {},
    "outputs": [
     {
      "data": {
       "text/plain": [
-       "4.2566359948675405"
+       "1.9373840541191725"
       ]
      },
-     "execution_count": 44,
+     "execution_count": 59,
      "metadata": {},
      "output_type": "execute_result"
     }
@@ -912,7 +778,7 @@
    "name": "python",
    "nbconvert_exporter": "python",
    "pygments_lexer": "ipython3",
-   "version": "3.6.8"
+   "version": "3.7.3"
   }
  },
  "nbformat": 4,
